name: Release
on: 
  push:
    branches:
      - master
jobs:
  bump_version:
    name: Bump Version
    runs-on: ubuntu-18.04
    outputs:
      new_tag: ${{ steps.github_tag_action.outputs.new_tag }}
      changelog: ${{ steps.github_tag_action.outputs.changelog }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: setup Node
        uses: actions/setup-node@v2
        with:
          node-version: 14.x
          registry-url: 'https://npm.pkg.github.com'

      - name: package-version
        run: node -p -e '`PACKAGE_VERSION=${require("./package.json").version}`' >> $GITHUB_ENV

      - name: Bump version and push tag
        id: github_tag_action
        uses: mathieudutour/github-tag-action@v6.0
        with:
          github_token: ${{ secrets.PERSONAL_TOKEN }}
          release_branches: release.*,hotfix.*
          default_bump: fix
          custom_tag: ${{ env.PACKAGE_VERSION }}
          
  create_release:
    name: Create Release
    runs-on: ubuntu-18.04
    needs: bump_version
    if: ${{ needs.bump_version.outputs.new_tag != null }}
    steps:
      - name: Set Swap Space
        uses: pierotofy/set-swap-space@master
        with:
          swap-size-gb: 10
      - name: HW Rev
        run: |
           free -h
           lscpu
        shell: bash
      - name: Checkout
        uses: actions/checkout@v2

      - name: Docker Build image
        run: docker build -t builder_stable_interface -f Dockerfile .

      # Target Mainnet
      - name: Compile Mainnet
        run: docker run --rm --name stable-interface-compiler --env TOOL_NODE_FLAGS="--max-old-space-size=4096" --env TARGET_BUILD="build:moc-mainnet" -v "$(pwd)"/build/:/usr/src/app/build -v "$(pwd)"/src/:/usr/src/app/src -v "$(pwd)"/public/:/usr/src/app/public builder_stable_interface

      - name: Pin to IPFS Mainnet
        id: upload
        uses: anantaramdas/ipfs-pinata-deploy-action@v1.6.3
        with:
          pin-name: MoC Mainnet ${{ needs.bump_version.outputs.new_tag }}
          path: './build'
          pinata-api-key: ${{ secrets.PINATA_API_KEY }}
          pinata-secret-api-key: ${{ secrets.PINATA_API_SECRET_KEY }}

      - name: Convert CIDv0 to CIDv1 Mainnet
        id: convert_cidv0
        uses: money-on-chain/convert-cidv0-cidv1@v1.0.0
        with:
          cidv0: ${{ steps.upload.outputs.hash }}

      # Target Staging Testnet
      - name: Compile Staging
        run: docker run --rm --name stable-interface-compiler --env TOOL_NODE_FLAGS="--max-old-space-size=4096" --env TARGET_BUILD="build:moc-testnet" -v "$(pwd)"/build_staging/:/usr/src/app/build -v "$(pwd)"/src/:/usr/src/app/src -v "$(pwd)"/public/:/usr/src/app/public builder_stable_interface

      - name: Pin to IPFS Staging
        id: upload_staging
        uses: anantaramdas/ipfs-pinata-deploy-action@v1.6.3
        with:
          pin-name: MoC Testnet ${{ needs.bump_version.outputs.new_tag }}
          path: './build_staging'
          pinata-api-key: ${{ secrets.PINATA_API_KEY }}
          pinata-secret-api-key: ${{ secrets.PINATA_API_SECRET_KEY }}

      - name: Convert CIDv0 to CIDv1 Staging
        id: convert_cidv0_staging
        uses: money-on-chain/convert-cidv0-cidv1@v1.0.0
        with:
          cidv0: ${{ steps.upload_staging.outputs.hash }}

      # Create the release
      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1.1.0
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_TOKEN }}
        with:
          tag_name: ${{ needs.bump_version.outputs.new_tag }}
          release_name: Release MoC ${{ needs.bump_version.outputs.new_tag }}
          body: |
            **Production IPFS hash of the deployment**:
            - CIDv0: `${{ steps.upload.outputs.hash }}`
            - CIDv1: `${{ steps.convert_cidv0.outputs.cidv1 }}`
            
            The latest release is always accessible via our alias to the Cloudflare IPFS gateway at [app.moneyonchain.com](https://app.moneyonchain.com) .            
            
            Main Production gateways:
            - https://app.moneyonchain.com
            - https://moneyonchain.mypinata.cloud/ipfs/${{ steps.upload.outputs.hash }}            
            
            Alternative Production gateways:
            - https://gateway.pinata.cloud/ipfs/${{ steps.upload.outputs.hash }}
            - https://cloudflare-ipfs.com/ipfs/${{ steps.upload.outputs.hash }}
            - https://ipfs.io/ipfs/${{ steps.upload.outputs.hash }}
            - https://${{ steps.convert_cidv0.outputs.cidv1 }}.ipfs.dweb.link/
            - https://${{ steps.convert_cidv0.outputs.cidv1 }}.ipfs.cf-ipfs.com/
            - [ipfs://${{ steps.upload.outputs.hash }}/](ipfs://${{ steps.upload.outputs.hash }}/)
            
            **Staging (testnet) IPFS hash of the deployment**:
            - CIDv0: `${{ steps.upload_staging.outputs.hash }}`
            - CIDv1: `${{ steps.convert_cidv0_staging.outputs.cidv1 }}`
            
            Staging (testnet) gateways:
            - https://app-testnet.moneyonchain.com
            - https://moneyonchain.mypinata.cloud/ipfs/${{ steps.upload_staging.outputs.hash }}            
            
            Alternative Staging (testnet) gateways:
            - https://gateway.pinata.cloud/ipfs/${{ steps.upload_staging.outputs.hash }}
            - https://cloudflare-ipfs.com/ipfs/${{ steps.upload_staging.outputs.hash }}
            - https://ipfs.io/ipfs/${{ steps.upload_staging.outputs.hash }}
            - https://${{ steps.convert_cidv0_staging.outputs.cidv1 }}.ipfs.dweb.link/
            - https://${{ steps.convert_cidv0_staging.outputs.cidv1 }}.ipfs.cf-ipfs.com/
            - [ipfs://${{ steps.upload_staging.outputs.hash }}/](ipfs://${{ steps.upload_staging.outputs.hash }}/)
                        
            ${{ needs.bump_version.outputs.changelog }}
