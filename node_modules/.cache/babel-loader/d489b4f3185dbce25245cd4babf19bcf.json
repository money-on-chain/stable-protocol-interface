{"ast":null,"code":"const getBalanceAndTransferMethodOfTokenToSend = (userState, currencyCode, auth) => {\n  if (!userState) return {};\n\n  switch (currencyCode) {\n    case 'RISKPRO':\n      return {\n        amount: userState === null || userState === void 0 ? void 0 : userState.bproBalance,\n        methodTransferTo: auth === null || auth === void 0 ? void 0 : auth.interfaceTransferRiskProTo\n      };\n\n    case 'STABLE':\n      return {\n        amount: userState === null || userState === void 0 ? void 0 : userState.docBalance,\n        methodTransferTo: auth === null || auth === void 0 ? void 0 : auth.interfaceTransferStableTo\n      };\n\n    case 'MOC':\n      return {\n        amount: userState === null || userState === void 0 ? void 0 : userState.mocBalance,\n        methodTransferTo: auth === null || auth === void 0 ? void 0 : auth.interfaceTransferMocTo\n      };\n\n    default:\n      return {};\n  }\n};\n\nconst getMaxAvailableOfCurrencyCode = (mocState, currencyCode, isRedeem) => {\n  switch (currencyCode) {\n    case 'RISKPRO':\n      return mocState.bproAvailableToRedeem;\n\n    case 'STABLE':\n      return isRedeem ? mocState.docAvailableToRedeem : mocState.docAvailableToMint;\n\n    case 'RISKPROX':\n      return mocState.bprox2AvailableToMint;\n\n    default:\n      return undefined;\n  }\n};\n\nconst currencies = [{\n  value: 'RESERVE',\n  image: `Moc/icon-reserve.svg`\n}, {\n  value: 'STABLE',\n  image: `Moc/icon-stable.svg`\n}, {\n  value: 'RISKPRO',\n  image: `Moc/icon-riskpro.svg`\n}, {\n  value: 'RISKPROX',\n  image: `Moc/icon-riskprox.svg`\n}, {\n  value: 'MOC',\n  image: `Moc/icon-moc.svg`\n}, {\n  value: 'RBTC',\n  image: `Moc/icon-moc.svg`\n}].map(it => ({ ...it,\n  longNameKey: `MoC.Tokens_${it.value}_code`\n}));\n\nconst getCurrenciesDetail = () => currencies;\n\nconst getCurrencyDetail = currencyCode => currencies.find(it => it.value === currencyCode);\n\nexport { getBalanceAndTransferMethodOfTokenToSend, currencies, getMaxAvailableOfCurrencyCode, getCurrenciesDetail, getCurrencyDetail };","map":{"version":3,"names":["getBalanceAndTransferMethodOfTokenToSend","userState","currencyCode","auth","amount","bproBalance","methodTransferTo","interfaceTransferRiskProTo","docBalance","interfaceTransferStableTo","mocBalance","interfaceTransferMocTo","getMaxAvailableOfCurrencyCode","mocState","isRedeem","bproAvailableToRedeem","docAvailableToRedeem","docAvailableToMint","bprox2AvailableToMint","undefined","currencies","value","image","map","it","longNameKey","getCurrenciesDetail","getCurrencyDetail","find"],"sources":["C:/Users/micae/OneDrive/Documentos/CoinFabrik/webapp-stable-ipfs/src/Config/currentcy.js"],"sourcesContent":["const getBalanceAndTransferMethodOfTokenToSend = (userState, currencyCode, auth) => {\r\n  if(!userState) return {};\r\n  switch (currencyCode) {\r\n    case 'RISKPRO':\r\n      return {\r\n        amount: userState?.bproBalance,\r\n        methodTransferTo: auth?.interfaceTransferRiskProTo,\r\n      };\r\n    case 'STABLE':\r\n      return {\r\n        amount: userState?.docBalance,\r\n        methodTransferTo: auth?.interfaceTransferStableTo,\r\n      };\r\n    case 'MOC':\r\n      return{\r\n        amount:userState?.mocBalance,\r\n        methodTransferTo: auth?.interfaceTransferMocTo,\r\n      }\r\n    default:\r\n      return {};\r\n  }\r\n};\r\n\r\nconst getMaxAvailableOfCurrencyCode = (mocState, currencyCode, isRedeem) => {\r\n  switch (currencyCode) {\r\n    case 'RISKPRO':\r\n      return mocState.bproAvailableToRedeem;\r\n    case 'STABLE':\r\n      return isRedeem ? mocState.docAvailableToRedeem : mocState.docAvailableToMint;\r\n    case 'RISKPROX':\r\n      return mocState.bprox2AvailableToMint;\r\n    default:\r\n      return undefined;\r\n  }\r\n};\r\n\r\nconst currencies = [\r\n  { value: 'RESERVE',     image: `Moc/icon-reserve.svg` },\r\n  { value: 'STABLE',      image: `Moc/icon-stable.svg` },\r\n  { value: 'RISKPRO',     image: `Moc/icon-riskpro.svg` },\r\n  { value: 'RISKPROX',    image: `Moc/icon-riskprox.svg` },\r\n  { value: 'MOC',         image: `Moc/icon-moc.svg` },\r\n  { value: 'RBTC',         image: `Moc/icon-moc.svg` },\r\n].map(it => ({\r\n  ...it,\r\n  longNameKey: `MoC.Tokens_${it.value}_code`,\r\n}));\r\n\r\nconst getCurrenciesDetail = () => currencies;\r\nconst getCurrencyDetail = currencyCode => currencies.find(it => it.value === currencyCode);\r\n\r\nexport {\r\n  getBalanceAndTransferMethodOfTokenToSend,\r\n  currencies,\r\n  getMaxAvailableOfCurrencyCode,\r\n  getCurrenciesDetail,\r\n  getCurrencyDetail\r\n}"],"mappings":"AAAA,MAAMA,wCAAwC,GAAG,CAACC,SAAD,EAAYC,YAAZ,EAA0BC,IAA1B,KAAmC;EAClF,IAAG,CAACF,SAAJ,EAAe,OAAO,EAAP;;EACf,QAAQC,YAAR;IACE,KAAK,SAAL;MACE,OAAO;QACLE,MAAM,EAAEH,SAAF,aAAEA,SAAF,uBAAEA,SAAS,CAAEI,WADd;QAELC,gBAAgB,EAAEH,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAEI;MAFnB,CAAP;;IAIF,KAAK,QAAL;MACE,OAAO;QACLH,MAAM,EAAEH,SAAF,aAAEA,SAAF,uBAAEA,SAAS,CAAEO,UADd;QAELF,gBAAgB,EAAEH,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAEM;MAFnB,CAAP;;IAIF,KAAK,KAAL;MACE,OAAM;QACJL,MAAM,EAACH,SAAD,aAACA,SAAD,uBAACA,SAAS,CAAES,UADd;QAEJJ,gBAAgB,EAAEH,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAEQ;MAFpB,CAAN;;IAIF;MACE,OAAO,EAAP;EAjBJ;AAmBD,CArBD;;AAuBA,MAAMC,6BAA6B,GAAG,CAACC,QAAD,EAAWX,YAAX,EAAyBY,QAAzB,KAAsC;EAC1E,QAAQZ,YAAR;IACE,KAAK,SAAL;MACE,OAAOW,QAAQ,CAACE,qBAAhB;;IACF,KAAK,QAAL;MACE,OAAOD,QAAQ,GAAGD,QAAQ,CAACG,oBAAZ,GAAmCH,QAAQ,CAACI,kBAA3D;;IACF,KAAK,UAAL;MACE,OAAOJ,QAAQ,CAACK,qBAAhB;;IACF;MACE,OAAOC,SAAP;EARJ;AAUD,CAXD;;AAaA,MAAMC,UAAU,GAAG,CACjB;EAAEC,KAAK,EAAE,SAAT;EAAwBC,KAAK,EAAG;AAAhC,CADiB,EAEjB;EAAED,KAAK,EAAE,QAAT;EAAwBC,KAAK,EAAG;AAAhC,CAFiB,EAGjB;EAAED,KAAK,EAAE,SAAT;EAAwBC,KAAK,EAAG;AAAhC,CAHiB,EAIjB;EAAED,KAAK,EAAE,UAAT;EAAwBC,KAAK,EAAG;AAAhC,CAJiB,EAKjB;EAAED,KAAK,EAAE,KAAT;EAAwBC,KAAK,EAAG;AAAhC,CALiB,EAMjB;EAAED,KAAK,EAAE,MAAT;EAAyBC,KAAK,EAAG;AAAjC,CANiB,EAOjBC,GAPiB,CAObC,EAAE,KAAK,EACX,GAAGA,EADQ;EAEXC,WAAW,EAAG,cAAaD,EAAE,CAACH,KAAM;AAFzB,CAAL,CAPW,CAAnB;;AAYA,MAAMK,mBAAmB,GAAG,MAAMN,UAAlC;;AACA,MAAMO,iBAAiB,GAAGzB,YAAY,IAAIkB,UAAU,CAACQ,IAAX,CAAgBJ,EAAE,IAAIA,EAAE,CAACH,KAAH,KAAanB,YAAnC,CAA1C;;AAEA,SACEF,wCADF,EAEEoB,UAFF,EAGER,6BAHF,EAIEc,mBAJF,EAKEC,iBALF"},"metadata":{},"sourceType":"module"}