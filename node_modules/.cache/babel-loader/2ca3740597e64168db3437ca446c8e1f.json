{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\micae\\\\OneDrive\\\\Documentos\\\\CoinFabrik\\\\webapp-stable-ipfs\\\\src\\\\Components\\\\Modals\\\\StakingOptionsModal\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport { Modal, Button, Spin, notification } from 'antd';\nimport { useEffect, useState, useContext } from 'react';\nimport { LoadingOutlined } from '@ant-design/icons';\nimport { LargeNumber } from '../../LargeNumber';\nimport { AuthenticateContext } from '../../../Context/Auth';\nimport Web3 from 'web3';\nimport './style.scss';\nimport { useTranslation } from \"react-i18next\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function StakingOptionsModal(props) {\n  _s();\n\n  const auth = useContext(AuthenticateContext);\n  const {\n    accountData = {}\n  } = auth;\n  const {\n    mode,\n    onClose,\n    visible,\n    amount,\n    onConfirm,\n    withdrawalId,\n    setBlockedWithdrawals\n  } = props;\n  const [step, setStep] = useState(2);\n  const amountInEth = Web3.utils.fromWei(amount);\n  const [t, i18n] = useTranslation([\"global\", 'moc']);\n  useEffect(() => {// if (auth.UserBalanceData?.mocAllowance > amount)setStep(2);\n  }, []);\n  if (!mode) return null; //methods\n\n  const setAllowance = async () => {\n    setStep(1);\n    await auth.interfaceApproveMoCTokenStaking(true, error => {}).then(res => {\n      setStep(2);\n      return null;\n    }).catch(e => {\n      console.error(e);\n      notification['error']({\n        message: \"Operations\",\n        description: \"Something went wrong! Transaction rejected!\",\n        duration: 10\n      });\n    });\n  };\n\n  const depositMoCs = async () => {\n    onClose();\n    await auth.interfaceStakingDeposit(amountInEth, accountData.Wallet, (error, txHash) => {\n      if (error) {\n        return error;\n      }\n\n      const status = 'pending';\n      onConfirm(status, txHash);\n    }).then(res => {\n      const status = res.status ? 'success' : 'error';\n      onConfirm(status, res.transactionHash);\n      return null;\n    }).catch(e => {\n      notification['error']({\n        message: t('global.RewardsError_Title'),\n        description: t('global.RewardsError_Message'),\n        duration: 10\n      });\n    });\n  };\n\n  const restakeMoCs = async () => {\n    onClose();\n    await auth.interfaceDelayMachineCancelWithdraw(withdrawalId, (error, txHash) => {\n      if (error) return error;\n      const status = 'pending';\n      onConfirm(status, txHash);\n      setBlockedWithdrawals(prev => [...prev, withdrawalId]);\n    }).then(res => {\n      const status = res.status ? 'success' : 'error';\n      onConfirm(status, res.transactionHash);\n      setBlockedWithdrawals(prev => prev.filter(val => val !== withdrawMoCs));\n      return null;\n    }).catch(e => {\n      console.error(e);\n      notification['error']({\n        message: t('global.RewardsError_Title'),\n        description: t('global.RewardsError_Message'),\n        duration: 10\n      });\n    });\n  };\n\n  const unstakeMoCs = async () => {\n    onClose();\n    await auth.interfaceUnStake(amountInEth, (error, txHash) => {\n      if (error) return error;\n      const status = 'pending';\n      onConfirm(status, txHash);\n    }).then(res => {\n      const status = res.status ? 'success' : 'error';\n      onConfirm(status, res.transactionHash);\n      return null;\n    }).catch(e => {\n      console.error(e);\n      notification['error']({\n        message: t('global.RewardsError_Title'),\n        description: t('global.RewardsError_Message'),\n        duration: 10\n      });\n    });\n  };\n\n  const withdrawMoCs = () => {\n    onClose();\n    auth.interfaceDelayMachineWithdraw(withdrawalId, (error, txHash) => {\n      if (error) return error;\n      const status = 'pending';\n      onConfirm(status, txHash);\n      setBlockedWithdrawals(prev => [...prev, withdrawalId]);\n    }).then(res => {\n      const status = res.status ? 'success' : 'error';\n      onConfirm(status, res.transactionHash);\n      setBlockedWithdrawals(prev => prev.filter(val => val !== withdrawMoCs));\n      return null;\n    }).catch(e => {\n      console.error(e);\n      notification['error']({\n        message: t('global.RewardsError_Title'),\n        description: t('global.RewardsError_Message'),\n        duration: 10\n      });\n    });\n  }; // renders\n\n\n  const renderStaking = () => {\n    const steps = {\n      '0': () => {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"StakingOptionsModal_Title\",\n            children: t('global.StakingOptionsModal_SetAllowance')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"StakingOptionsModal_Content\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: t('global.StakingOptionsModal_AllowanceDescription')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"primary\",\n              onClick: () => setAllowance(),\n              children: t('global.StakingOptionsModal_Authorize')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true);\n      },\n      '1': () => {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"StakingOptionsModal_Title\",\n            children: t('global.StakingOptionsModal_SetAllowance')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"StakingOptionsModal_Content AllowanceLoading\",\n            children: [/*#__PURE__*/_jsxDEV(Spin, {\n              indicator: /*#__PURE__*/_jsxDEV(LoadingOutlined, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 46\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: t('global.StakingOptionsModal_ProccessingAllowance')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true);\n      },\n      '2': () => {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"StakingOptionsModal_Title\",\n            children: t('global.StakingOptionsModal_Title')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"StakingOptionsModal_Content\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"InfoContainer\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"title\",\n                children: t('global.StakingOptionsModal_AmountToStake')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"value amount\",\n                children: [/*#__PURE__*/_jsxDEV(LargeNumber, {\n                  amount: amount,\n                  currencyCode: \"RESERVE\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 176,\n                  columnNumber: 37\n                }, this), ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: t('MoC.Tokens_MOC_code', {\n                    ns: 'moc'\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 177,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: t('global.StakingOptionsModal_StakingDescription')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ActionButtonsRow\",\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                type: \"default\",\n                onClick: onClose,\n                children: t('global.StakingOptionsModal_Cancel')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                type: \"primary\",\n                onClick: depositMoCs,\n                className: \"ButtonPrimary\",\n                children: t('global.StakingOptionsModal_Comfirm')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true);\n      }\n    };\n    return steps[step] ? steps[step]() : null;\n  };\n\n  const renderUnstaking = () => {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"StakingOptionsModal_Title\",\n        children: t('global.StakingOptionsModal_UnstakeTitle')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"StakingOptionsModal_Content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"InfoContainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"title\",\n            children: t('global.StakingOptionsModal_AmountToUnstake')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"value amount\",\n            children: [/*#__PURE__*/_jsxDEV(LargeNumber, {\n              amount: amount,\n              currencyCode: \"RESERVE\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 29\n            }, this), ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n              children: t('MoC.Tokens_MOC_code', {\n                ns: 'moc'\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: t('global.StakingOptionsModal_UnstakingDescription')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ActionButtonsRow\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            type: \"default\",\n            onClick: onClose,\n            children: t('global.StakingOptionsModal_Cancel')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            onClick: unstakeMoCs,\n            className: \"ButtonPrimary\",\n            children: t('global.StakingOptionsModal_Comfirm')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  };\n\n  const renderWithdraw = () => {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"StakingOptionsModal_Title\",\n        children: t('global.StakingOptionsModal_WithdrawTitle')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"StakingOptionsModal_Content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"InfoContainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"title\",\n            children: t('global.StakingOptionsModal_AmountToWithdraw')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"value amount\",\n            children: [/*#__PURE__*/_jsxDEV(LargeNumber, {\n              amount: amount,\n              currencyCode: \"RESERVE\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 29\n            }, this), ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n              children: t('MoC.Tokens_MOC_code', {\n                ns: 'moc'\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: t('global.StakingOptionsModal_WithdrawDescription')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ActionButtonsRow\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            type: \"default\",\n            onClick: onClose,\n            children: t('global.StakingOptionsModal_Cancel')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            onClick: withdrawMoCs,\n            className: \"ButtonPrimary\",\n            children: t('global.StakingOptionsModal_Comfirm')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  };\n\n  const renderRestaking = () => {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"StakingOptionsModal_Title\",\n        children: t('global.StakingOptionsModal_RestakeTitle')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"StakingOptionsModal_Content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"InfoContainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"title\",\n            children: t('global.StakingOptionsModal_AmountToRestake')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"value amount\",\n            children: [/*#__PURE__*/_jsxDEV(LargeNumber, {\n              amount: amount,\n              currencyCode: \"RESERVE\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 29\n            }, this), ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n              children: t('MoC.Tokens_MOC_code', {\n                ns: 'moc'\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: t('global.StakingOptionsModal_RestakeDescription')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ActionButtonsRow\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            type: \"default\",\n            onClick: onClose,\n            children: t('global.StakingOptionsModal_Cancel')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            onClick: restakeMoCs,\n            className: \"ButtonPrimary\",\n            children: t('global.StakingOptionsModal_Comfirm')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  };\n\n  const render = () => {\n    const modes = {\n      staking: renderStaking,\n      unstaking: renderUnstaking,\n      withdraw: renderWithdraw,\n      restake: renderRestaking\n    };\n    return modes[mode]();\n  };\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    className: \"StakingOptionsModal\",\n    visible: visible,\n    onCancel: onClose,\n    footer: null,\n    children: render()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 300,\n    columnNumber: 9\n  }, this);\n}\n\n_s(StakingOptionsModal, \"akiSAx9X4BSr9ZW2CymI+EKuq6Q=\", false, function () {\n  return [useTranslation];\n});\n\n_c = StakingOptionsModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"StakingOptionsModal\");","map":{"version":3,"names":["Modal","Button","Spin","notification","useEffect","useState","useContext","LoadingOutlined","LargeNumber","AuthenticateContext","Web3","useTranslation","StakingOptionsModal","props","auth","accountData","mode","onClose","visible","amount","onConfirm","withdrawalId","setBlockedWithdrawals","step","setStep","amountInEth","utils","fromWei","t","i18n","setAllowance","interfaceApproveMoCTokenStaking","error","then","res","catch","e","console","message","description","duration","depositMoCs","interfaceStakingDeposit","Wallet","txHash","status","transactionHash","restakeMoCs","interfaceDelayMachineCancelWithdraw","prev","filter","val","withdrawMoCs","unstakeMoCs","interfaceUnStake","interfaceDelayMachineWithdraw","renderStaking","steps","ns","renderUnstaking","renderWithdraw","renderRestaking","render","modes","staking","unstaking","withdraw","restake"],"sources":["C:/Users/micae/OneDrive/Documentos/CoinFabrik/webapp-stable-ipfs/src/Components/Modals/StakingOptionsModal/index.jsx"],"sourcesContent":["import { Modal, Button, Spin, notification } from 'antd';\r\nimport { useEffect, useState, useContext } from 'react';\r\nimport { LoadingOutlined } from '@ant-design/icons';\r\nimport { LargeNumber } from '../../LargeNumber';\r\nimport { AuthenticateContext } from '../../../Context/Auth';\r\nimport Web3 from 'web3';\r\nimport './style.scss';\r\nimport {useTranslation} from \"react-i18next\";\r\n\r\nexport default function StakingOptionsModal(props) {\r\n    const auth = useContext(AuthenticateContext);\r\n    const { accountData = {} } = auth;\r\n    const { mode, onClose, visible, amount, onConfirm, withdrawalId, setBlockedWithdrawals } = props;\r\n    const [step, setStep] = useState(2);\r\n\r\n   const amountInEth = Web3.utils.fromWei(amount);\r\n   const [t, i18n]= useTranslation([\"global\",'moc'])\r\n\r\n    useEffect(() => {\r\n        // if (auth.UserBalanceData?.mocAllowance > amount)setStep(2);\r\n    }, []);\r\n    if (!mode) return null;\r\n\r\n\r\n    //methods\r\n    const setAllowance = async () => {\r\n        setStep(1);\r\n        await auth.interfaceApproveMoCTokenStaking(true, (error) => {\r\n        }).then(res => {\r\n                setStep(2);\r\n                return null;\r\n            })\r\n            .catch(e => {\r\n                console.error(e);\r\n                notification['error']({\r\n                    message: \"Operations\",\r\n                    description: \"Something went wrong! Transaction rejected!\",\r\n                    duration: 10\r\n                });\r\n            });\r\n    };\r\n\r\n    const depositMoCs = async () => {\r\n        onClose();\r\n        await auth.interfaceStakingDeposit(amountInEth, accountData.Wallet, (error, txHash) => {\r\n            if (error) {\r\n                return error;\r\n            }\r\n            const status = 'pending';\r\n            onConfirm(status, txHash);\r\n        })\r\n        .then(res => {\r\n            const status = res.status ? 'success' : 'error';\r\n            onConfirm(status, res.transactionHash);\r\n            return null;\r\n        })\r\n        .catch(e => {\r\n            notification['error']({\r\n                message: t('global.RewardsError_Title'),\r\n                description: t('global.RewardsError_Message'),\r\n                duration: 10\r\n            });\r\n        })\r\n    };\r\n\r\n    const restakeMoCs = async () => {\r\n        onClose();\r\n        await auth.interfaceDelayMachineCancelWithdraw(withdrawalId, (error, txHash) => {\r\n                if (error) return error;\r\n\r\n                const status = 'pending';\r\n                onConfirm(status, txHash);\r\n                setBlockedWithdrawals(prev => [...prev, withdrawalId]);\r\n            })\r\n            .then(res => {\r\n                const status = res.status ? 'success' : 'error';\r\n                onConfirm(status, res.transactionHash);\r\n                setBlockedWithdrawals(prev => prev.filter(val => val !== withdrawMoCs));\r\n                return null;\r\n            })\r\n            .catch(e => {\r\n                console.error(e);\r\n                notification['error']({\r\n                    message: t('global.RewardsError_Title'),\r\n                    description: t('global.RewardsError_Message'),\r\n                    duration: 10\r\n                });\r\n            });\r\n    };\r\n\r\n    const unstakeMoCs = async () => {\r\n        onClose();\r\n        await auth.interfaceUnStake(amountInEth, (error, txHash) => {\r\n                if (error) return error;\r\n\r\n                const status = 'pending';\r\n                onConfirm(status, txHash);\r\n            })\r\n            .then(res => {\r\n                const status = res.status ? 'success' : 'error';\r\n                onConfirm(status, res.transactionHash);\r\n                return null;\r\n            })\r\n            .catch(e => {\r\n                console.error(e);\r\n                notification['error']({\r\n                    message: t('global.RewardsError_Title'),\r\n                    description: t('global.RewardsError_Message'),\r\n                    duration: 10\r\n                });\r\n            });\r\n    };\r\n    const withdrawMoCs = () => {\r\n        onClose();\r\n        auth.interfaceDelayMachineWithdraw(withdrawalId, (error, txHash) => {\r\n                if (error) return error;\r\n\r\n                const status = 'pending';\r\n                onConfirm(status, txHash);\r\n                setBlockedWithdrawals(prev => [...prev, withdrawalId]);\r\n            })\r\n            .then(res => {\r\n                const status = res.status ? 'success' : 'error';\r\n                onConfirm(status, res.transactionHash);\r\n                setBlockedWithdrawals(prev => prev.filter(val => val !== withdrawMoCs));\r\n                return null;\r\n            })\r\n            .catch(e => {\r\n                console.error(e);\r\n                notification['error']({\r\n                    message: t('global.RewardsError_Title'),\r\n                    description: t('global.RewardsError_Message'),\r\n                    duration: 10\r\n                });\r\n            });\r\n    };\r\n\r\n    // renders\r\n    const renderStaking = () => {\r\n        const steps = {\r\n            '0': () => {\r\n                return (\r\n                    <>\r\n                        <h1 className=\"StakingOptionsModal_Title\">{t('global.StakingOptionsModal_SetAllowance')}</h1>\r\n                        <div className=\"StakingOptionsModal_Content\">\r\n                            <p>{t('global.StakingOptionsModal_AllowanceDescription')}\r\n                            </p>\r\n                            <Button\r\n                                type=\"primary\"\r\n                                onClick={() => setAllowance()}\r\n                            >{t('global.StakingOptionsModal_Authorize')}\r\n                            </Button>\r\n                        </div>\r\n                    </>\r\n                )\r\n            },\r\n            '1': () => {\r\n                return (\r\n                    <>\r\n                        <h1 className=\"StakingOptionsModal_Title\">{t('global.StakingOptionsModal_SetAllowance')}</h1>\r\n                        <div className=\"StakingOptionsModal_Content AllowanceLoading\">\r\n                            <Spin indicator={<LoadingOutlined />} />\r\n                            <p>{t('global.StakingOptionsModal_ProccessingAllowance')}</p>\r\n                        </div>\r\n                    </>\r\n                )\r\n            },\r\n            '2': () => {\r\n                return (\r\n                    <>\r\n                        <h1 className=\"StakingOptionsModal_Title\">{t('global.StakingOptionsModal_Title')}</h1>\r\n                        <div className=\"StakingOptionsModal_Content\">\r\n                            <div className=\"InfoContainer\">\r\n                                <span className=\"title\">{t('global.StakingOptionsModal_AmountToStake')}</span>\r\n                                <span className=\"value amount\">\r\n                                    <LargeNumber amount={amount} currencyCode=\"RESERVE\" />{' '}\r\n                                    <span>{t('MoC.Tokens_MOC_code', {ns: 'moc'})}</span>\r\n                                </span>\r\n                            </div>\r\n                            <p>{t('global.StakingOptionsModal_StakingDescription')}</p>\r\n                            <div className=\"ActionButtonsRow\">\r\n                                <Button\r\n                                    type=\"default\"\r\n                                    onClick={onClose}\r\n                                >{t('global.StakingOptionsModal_Cancel')}</Button>\r\n                                <Button\r\n                                    type=\"primary\"\r\n                                    onClick={depositMoCs}\r\n                                    className=\"ButtonPrimary\"\r\n                                >{t('global.StakingOptionsModal_Comfirm')}</Button>\r\n                            </div>\r\n                        </div>\r\n                    </>\r\n                );\r\n            }\r\n        }\r\n\r\n        return steps[step] ? steps[step]() : null;\r\n    };\r\n\r\n    const renderUnstaking = () => {\r\n        return (\r\n            <>\r\n                <h1 className=\"StakingOptionsModal_Title\">{t('global.StakingOptionsModal_UnstakeTitle')}</h1>\r\n                <div className=\"StakingOptionsModal_Content\">\r\n                    <div className=\"InfoContainer\">\r\n                        <span className=\"title\">{t('global.StakingOptionsModal_AmountToUnstake')}</span>\r\n                        <span className=\"value amount\">\r\n                            <LargeNumber amount={amount} currencyCode=\"RESERVE\" />{' '}\r\n                            <span>{t('MoC.Tokens_MOC_code', {ns: 'moc'})}</span>\r\n                        </span>\r\n                    </div>\r\n                    <p>{t('global.StakingOptionsModal_UnstakingDescription')}</p>\r\n                    <div className=\"ActionButtonsRow\">\r\n                        <Button\r\n                            type=\"default\"\r\n                            onClick={onClose}\r\n                        >{t('global.StakingOptionsModal_Cancel')}</Button>\r\n                        <Button\r\n                            type=\"primary\"\r\n                            onClick={unstakeMoCs}\r\n                            className=\"ButtonPrimary\"\r\n                        >{t('global.StakingOptionsModal_Comfirm')}</Button>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n    };\r\n\r\n    const renderWithdraw = () => {\r\n        return (\r\n            <>\r\n                <h1 className=\"StakingOptionsModal_Title\">{t('global.StakingOptionsModal_WithdrawTitle')}</h1>\r\n                <div className=\"StakingOptionsModal_Content\">\r\n                    <div className=\"InfoContainer\">\r\n                        <span className=\"title\">{t('global.StakingOptionsModal_AmountToWithdraw')}</span>\r\n                        <span className=\"value amount\">\r\n                            <LargeNumber amount={amount} currencyCode=\"RESERVE\" />{' '}\r\n                            <span>{t('MoC.Tokens_MOC_code', {ns: 'moc'})}</span>\r\n                        </span>\r\n                    </div>\r\n                    <p>{t('global.StakingOptionsModal_WithdrawDescription')}</p>\r\n                    <div className=\"ActionButtonsRow\">\r\n                        <Button\r\n                            type=\"default\"\r\n                            onClick={onClose}\r\n                        >{t('global.StakingOptionsModal_Cancel')}</Button>\r\n                        <Button\r\n                            type=\"primary\"\r\n                            onClick={withdrawMoCs}\r\n                            className=\"ButtonPrimary\"\r\n                        >{t('global.StakingOptionsModal_Comfirm')}</Button>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n    };\r\n\r\n    const renderRestaking = () => {\r\n        return (\r\n            <>\r\n                <h1 className=\"StakingOptionsModal_Title\">{t('global.StakingOptionsModal_RestakeTitle')}</h1>\r\n                <div className=\"StakingOptionsModal_Content\">\r\n                    <div className=\"InfoContainer\">\r\n                        <span className=\"title\">{t('global.StakingOptionsModal_AmountToRestake')}</span>\r\n                        <span className=\"value amount\">\r\n                            <LargeNumber amount={amount} currencyCode=\"RESERVE\" />{' '}\r\n                            <span>{t('MoC.Tokens_MOC_code', {ns: 'moc'})}</span>\r\n                        </span>\r\n                    </div>\r\n                    <p>{t('global.StakingOptionsModal_RestakeDescription')}</p>\r\n                    <div className=\"ActionButtonsRow\">\r\n                        <Button\r\n                            type=\"default\"\r\n                            onClick={onClose}\r\n                        >{t('global.StakingOptionsModal_Cancel')}</Button>\r\n                        <Button\r\n                            type=\"primary\"\r\n                            onClick={restakeMoCs}\r\n                            className=\"ButtonPrimary\"\r\n                        >{t('global.StakingOptionsModal_Comfirm')}</Button>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n    };\r\n\r\n    const render = () => {\r\n        const modes = {\r\n            staking: renderStaking,\r\n            unstaking: renderUnstaking,\r\n            withdraw: renderWithdraw,\r\n            restake: renderRestaking\r\n        };\r\n\r\n        return modes[mode]();\r\n    };\r\n\r\n    return (\r\n        <Modal\r\n            className=\"StakingOptionsModal\"\r\n            visible={visible}\r\n            onCancel={onClose}\r\n            footer={null}\r\n        >\r\n            {render()}\r\n        </Modal>\r\n    )\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}