{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\micae\\\\OneDrive\\\\Documentos\\\\CoinFabrik\\\\webapp-stable-ipfs\\\\src\\\\Components\\\\Modals\\\\RbtcToBtcGenerateModal\\\\step3.jsx\",\n    _s = $RefreshSig$();\n\nimport { Button } from 'antd';\nimport React, { Fragment, useContext, useEffect, useState } from \"react\";\nimport { weiToNumberFormat } from '../../../Helpers/math-helpers';\nimport Web3 from \"web3\";\nimport FastBtcBridge from \"../../../Contracts/coinbase/FastBtcBridge.json\";\nimport { toContract } from '../../../Lib/numberHelper';\nimport Copy from \"../../Page/Copy\";\nimport { config } from '../../../Config/config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BigNumber = require('bignumber.js');\n\nexport default function Step3(props) {\n  _s();\n\n  const {\n    visible = false,\n    handleClose = () => {}\n  } = props;\n  const [amountReceiving, setAmountReceiving] = useState('0');\n  const [feesPaid, setFeesPaid] = useState('0'); // const [headerState, setHeaderState] = useState('Double check that you are entering the correct BTC destination address.');\n\n  const [labelColor, setLabelColor] = useState('white'); // const [headerIcon, setHeaderIcon] = useState('icon-atention.svg');\n\n  const [imgTrx, setImgTrx] = useState('icon-atention.svg');\n  const [isVisible, setIsVisible] = useState(true);\n  const [completed, setCompleted] = useState(false);\n  const [buttonCompleted, setButtonCompleted] = useState('Confirm');\n  const [labelTxid, setlabelTxid] = useState('');\n  const [intervalBTCCheck, setIntervalBTCCheck] = useState(0); // const [labelTrx, setlabelTrx] = useState(t(\"fastbtc.topUpWalletModal.header_complete\"));\n\n  const [labelTrx, setlabelTrx] = useState(\"Double check that you are entering the correct BTC destination address.\");\n  const {\n    auth\n  } = props;\n  const {\n    web3\n  } = auth;\n  const {\n    accountData\n  } = auth;\n  console.log('accountData.Owner');\n  console.log(accountData.Owner);\n  console.log('accountData.Owner');\n  const [account, setAccount] = useState(null);\n  useEffect(() => {\n    connect();\n  }, [auth]);\n  useEffect(() => {\n    currentFeeData();\n  }, [web3]);\n  useEffect(() => {\n    if (completed === false && intervalBTCCheck !== 0) {\n      console.log(\"clearInterval\", intervalBTCCheck);\n      clearInterval(intervalBTCCheck);\n      setIntervalBTCCheck(0);\n    }\n  }, [completed]);\n\n  const connect = () => {\n    setAccount(auth.account);\n  };\n\n  const currentFeeData = async () => {\n    const fastBtcBridgeAddress = config.environment.fastBtcBridgeAddress;\n    console.log('Reading fastBtcBridge Contract... address: ', fastBtcBridgeAddress);\n    console.log(Web3.utils.toWei(props.rbtcAmount, 'ether'));\n    console.log('Reading fastBtcBridge Contract... address: ', fastBtcBridgeAddress);\n\n    if (web3 != null) {\n      const fastBtcBridge = new web3.eth.Contract(FastBtcBridge, fastBtcBridgeAddress);\n\n      const calculateCurrentFee = () => {\n        return new Promise((resolve, reject) => {\n          fastBtcBridge.methods.calculateCurrentFeeWei(Web3.utils.toWei(props.rbtcAmount, 'ether')).call().then(async feesPaid => {\n            const receivedAmount = new BigNumber(Web3.utils.toWei(props.rbtcAmount, 'ether')).minus(feesPaid).toString();\n            setFeesPaid(weiToNumberFormat(feesPaid, 8));\n            setAmountReceiving(weiToNumberFormat(receivedAmount, 8));\n          }).catch(error => {\n            console.log(error);\n            reject(error);\n          });\n        });\n      };\n\n      calculateCurrentFee().then(result => {});\n    }\n  };\n\n  const fastBtcBridgeAddress = config.environment.fastBtcBridgeAddress;\n  console.log('sendTransaction: Reading fastBtcBridge Contract... address: ', fastBtcBridgeAddress);\n  const fastBtcBridge = new web3.eth.Contract(FastBtcBridge, fastBtcBridgeAddress);\n\n  const sendTransaction = async () => {\n    // console.log('sendTransaction: Reading fastBtcBridge Contract... address: ', fastBtcBridgeAddress);\n    if (web3 != null) {\n      setlabelTrx('Waiting');\n      setLabelColor('yellow'); // const fastBtcBridge = new web3.eth.Contract(FastBtcBridge, fastBtcBridgeAddress);\n\n      const fastBtcTransferToBtc = () => {\n        return new Promise((resolve, reject) => {\n          setImgTrx('icon-processing.svg');\n          setIsVisible(false);\n          setlabelTrx('Waiting');\n          fastBtcBridge.methods.transferToBtc(props.rbtcAddress).send([props.rbtcAddress], {\n            from: accountData.Owner,\n            value: toContract(web3.utils.toWei(`${parseFloat(props.rbtcAmount)}`, 'ether')),\n            gas: 300000\n          }).then(response => {\n            web3.eth.getTransactionReceipt(response.transactionHash).then(responseRSKTopics => {\n              setlabelTrx('Waiting');\n              setCompleted(true);\n              setIsVisible(true);\n              setButtonCompleted('Close');\n              setlabelTxid(responseRSKTopics['transactionHash']);\n              setCompleted(true);\n\n              if (responseRSKTopics.logs && responseRSKTopics.logs.length > 0 && responseRSKTopics.logs[0].topics && responseRSKTopics.logs[0].topics.length === 3) {\n                setIntervalBTCCheck(setInterval(() => {\n                  checkTransferBTCProgress(responseRSKTopics.logs[0].topics[1]);\n                }, 30000));\n              }\n            }).catch(error => {\n              //setIsPending(false);\n              setLabelColor(\"red\");\n              setlabelTrx('Failed');\n              setCompleted(true);\n              setIsVisible(true);\n              setButtonCompleted('Close');\n              setlabelTxid(error['transactionHash']);\n              console.log(\"fail\", error);\n            });\n            resolve(response);\n          }).catch(error => {\n            setLabelColor(\"red\");\n            setlabelTrx('Failed');\n            setCompleted(true);\n            setIsVisible(true);\n            setButtonCompleted('Close');\n            setlabelTxid(error['transactionHash']);\n            reject(error);\n            setCompleted(true);\n          });\n        });\n      };\n\n      fastBtcTransferToBtc().then(result => {});\n    }\n  };\n\n  const checkTransferBTCProgress = transferId => {\n    setLabelColor(\"white\");\n    setlabelTrx(\"Initializing\");\n    fastBtcBridge.methods.getTransferByTransferId(transferId).call().then(responseBTC => {\n      switch (responseBTC.status) {\n        case \"0\":\n          {\n            setLabelColor(\"white\");\n            setlabelTrx(\"Initializing\");\n            break;\n          }\n\n        case \"1\":\n          {\n            setLabelColor(\"white\");\n            setlabelTrx(\"Validating\");\n            break;\n          }\n\n        case \"2\":\n          {\n            setLabelColor(\"white\");\n            setlabelTrx(\"Pending\");\n            break;\n          }\n\n        case \"3\":\n          {\n            setLabelColor(\"green\");\n            setlabelTrx(\"Confirmed\");\n            setImgTrx(\"icon-confirmed.svg\");\n            clearInterval(intervalBTCCheck);\n            setIntervalBTCCheck(null);\n            break;\n          }\n\n        case \"4\":\n          {\n            console.log(\"44444444444444\");\n            console.log(responseBTC.status);\n            setLabelColor(\"red\");\n            setlabelTrx(\"Refunded\");\n            clearInterval(intervalBTCCheck);\n            setIntervalBTCCheck(null);\n            break;\n          }\n      }\n\n      console.log(responseBTC);\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  const handleSubmit = () => {\n    if (completed == false) {\n      sendTransaction();\n    }\n\n    if (completed == true) {\n      handleClose();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert-message-modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert-message\",\n        children: [(labelTrx == 'Pending' || labelTrx == 'Mined' || labelTrx == 'Failed' || labelTrx == 'Waiting' || labelTrx == 'Initializing' || labelTrx == 'Validating') && /*#__PURE__*/_jsxDEV(Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              'display': 'flex',\n              'width': '100%'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              style: {\n                'flexGrow': '0'\n              },\n              className: 'rotate',\n              src: imgTrx,\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                'flexGrow': '1',\n                'textAlign': 'center',\n                'marginTop': '5px',\n                'marginLeft': '-45px',\n                'color': labelColor\n              },\n              children: /*#__PURE__*/_jsxDEV(\"b\", {\n                children: labelTrx\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 143\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 25\n        }, this), (labelTrx != 'Pending' && labelTrx != 'Mined' && labelTrx != 'Failed' && labelTrx != 'Waiting' && labelTrx != 'Initializing' && labelTrx != 'Validating' || labelTrx == 'Confirmed') && /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            'display': 'flex',\n            'width': '100%'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            style: {\n              'flexGrow': '0'\n            },\n            src: imgTrx,\n            alt: \"332\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 70\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              'flexGrow': '1',\n              'marginLeft': '10px'\n            },\n            children: labelTrx\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'ModalUpTopContainer',\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"InputAddressContainer separation\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"InputAddressLabel\",\n          children: [\"Destination Address on BTC Network\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"rbtc_address\",\n            children: props.rbtcAddress\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"AmountSummary\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Detail\",\n        children: \"Exchanging\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Amount strong\",\n        children: [props.rbtcAmount * 1, \" rBTC\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"AmountSummary\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Detail\",\n        children: \"Receiving\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Amount strong\",\n        children: [amountReceiving, \" BTC\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"AmountSummary\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Detail\",\n        children: \"Fee\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Amount\",\n        children: [feesPaid, \" BTC\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 13\n    }, this), labelTxid && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"AmountSummary\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Detail\",\n        children: \"Tx ID\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Amount\",\n        children: /*#__PURE__*/_jsxDEV(Copy, {\n          textToShow: (labelTxid === null || labelTxid === void 0 ? void 0 : labelTxid.slice(0, 5)) + '...' + (labelTxid === null || labelTxid === void 0 ? void 0 : labelTxid.slice(-4)),\n          textToCopy: labelTxid\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"GenerateBTC\",\n      style: {\n        display: isVisible ? \"block\" : \"none\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        onClick: () => handleSubmit(),\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: buttonCompleted\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 212,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Step3, \"3/aINGEuTQbWz2OwMje/QbSGaV8=\");\n\n_c = Step3;\n\nvar _c;\n\n$RefreshReg$(_c, \"Step3\");","map":{"version":3,"names":["Button","React","Fragment","useContext","useEffect","useState","weiToNumberFormat","Web3","FastBtcBridge","toContract","Copy","config","BigNumber","require","Step3","props","visible","handleClose","amountReceiving","setAmountReceiving","feesPaid","setFeesPaid","labelColor","setLabelColor","imgTrx","setImgTrx","isVisible","setIsVisible","completed","setCompleted","buttonCompleted","setButtonCompleted","labelTxid","setlabelTxid","intervalBTCCheck","setIntervalBTCCheck","labelTrx","setlabelTrx","auth","web3","accountData","console","log","Owner","account","setAccount","connect","currentFeeData","clearInterval","fastBtcBridgeAddress","environment","utils","toWei","rbtcAmount","fastBtcBridge","eth","Contract","calculateCurrentFee","Promise","resolve","reject","methods","calculateCurrentFeeWei","call","then","receivedAmount","minus","toString","catch","error","result","sendTransaction","fastBtcTransferToBtc","transferToBtc","rbtcAddress","send","from","value","parseFloat","gas","response","getTransactionReceipt","transactionHash","responseRSKTopics","logs","length","topics","setInterval","checkTransferBTCProgress","transferId","getTransferByTransferId","responseBTC","status","handleSubmit","slice","display"],"sources":["C:/Users/micae/OneDrive/Documentos/CoinFabrik/webapp-stable-ipfs/src/Components/Modals/RbtcToBtcGenerateModal/step3.jsx"],"sourcesContent":["import { Button } from 'antd';\r\nimport React, {Fragment, useContext, useEffect, useState} from \"react\";\r\nimport {weiToNumberFormat} from '../../../Helpers/math-helpers'\r\nimport Web3 from \"web3\";\r\nimport FastBtcBridge from \"../../../Contracts/coinbase/FastBtcBridge.json\";\r\nimport { toContract } from '../../../Lib/numberHelper';\r\nimport Copy from \"../../Page/Copy\";\r\nimport { config } from '../../../Config/config';\r\nconst BigNumber = require('bignumber.js');\r\n\r\n\r\nexport default function Step3(props) {\r\n\r\n    const {visible = false, handleClose = () => {}} = props;\r\n    const [amountReceiving, setAmountReceiving] = useState('0');\r\n    const [feesPaid, setFeesPaid] = useState('0');\r\n    // const [headerState, setHeaderState] = useState('Double check that you are entering the correct BTC destination address.');\r\n    const [labelColor, setLabelColor] = useState('white');\r\n    // const [headerIcon, setHeaderIcon] = useState('icon-atention.svg');\r\n    const [imgTrx, setImgTrx] = useState('icon-atention.svg');\r\n    const [isVisible, setIsVisible] = useState(true)\r\n    const [completed, setCompleted] = useState(false);\r\n    const [buttonCompleted, setButtonCompleted] = useState('Confirm');\r\n    const [labelTxid, setlabelTxid] = useState('');\r\n    const [intervalBTCCheck, setIntervalBTCCheck] = useState(0);\r\n    // const [labelTrx, setlabelTrx] = useState(t(\"fastbtc.topUpWalletModal.header_complete\"));\r\n    const [labelTrx, setlabelTrx] = useState(\"Double check that you are entering the correct BTC destination address.\");\r\n\r\n    const {auth}= props;\r\n    const {web3}= auth;\r\n    const { accountData } = auth;\r\n    console.log('accountData.Owner');\r\n    console.log(accountData.Owner);\r\n    console.log('accountData.Owner');\r\n    const [account, setAccount] = useState(null);\r\n\r\n    useEffect(() => {\r\n        connect();\r\n    },[auth]);\r\n\r\n    useEffect(() => {\r\n        currentFeeData();\r\n    }, [web3]);\r\n\r\n    useEffect(() => {\r\n        if (completed === false && intervalBTCCheck !== 0) {\r\n            console.log(\"clearInterval\", intervalBTCCheck);\r\n            clearInterval(intervalBTCCheck);\r\n            setIntervalBTCCheck(0);\r\n        }\r\n    }, [completed]);\r\n\r\n    const connect = () =>  {\r\n        setAccount(auth.account);\r\n    };\r\n\r\n    const currentFeeData = async () => {\r\n        const fastBtcBridgeAddress = config.environment.fastBtcBridgeAddress;\r\n        console.log('Reading fastBtcBridge Contract... address: ', fastBtcBridgeAddress);\r\n        console.log(Web3.utils.toWei(props.rbtcAmount, 'ether'))\r\n        console.log('Reading fastBtcBridge Contract... address: ', fastBtcBridgeAddress);\r\n        if(web3!=null){\r\n            const fastBtcBridge = new web3.eth.Contract(FastBtcBridge, fastBtcBridgeAddress);\r\n            const calculateCurrentFee = () => {\r\n                return new Promise((resolve, reject) => {\r\n                    fastBtcBridge.methods.calculateCurrentFeeWei(Web3.utils.toWei(props.rbtcAmount, 'ether'))\r\n                        .call().then(async feesPaid => {\r\n                        const receivedAmount = new BigNumber(Web3.utils.toWei(props.rbtcAmount, 'ether'))\r\n                            .minus(feesPaid)\r\n                            .toString();\r\n                        setFeesPaid(weiToNumberFormat(feesPaid, 8));\r\n                        setAmountReceiving(weiToNumberFormat(receivedAmount, 8));\r\n                    }).catch(error => {\r\n                        console.log(error);\r\n                        reject(error);\r\n                    });\r\n                });\r\n            };\r\n\r\n            calculateCurrentFee().then(result => {});\r\n        }\r\n    };\r\n\r\n    const fastBtcBridgeAddress = config.environment.fastBtcBridgeAddress;\r\n    console.log('sendTransaction: Reading fastBtcBridge Contract... address: ', fastBtcBridgeAddress);\r\n    const fastBtcBridge = new web3.eth.Contract(FastBtcBridge, fastBtcBridgeAddress);\r\n\r\n    const sendTransaction= async () => {\r\n        // console.log('sendTransaction: Reading fastBtcBridge Contract... address: ', fastBtcBridgeAddress);\r\n        if(web3!=null){\r\n            setlabelTrx('Waiting')\r\n            setLabelColor('yellow')\r\n            // const fastBtcBridge = new web3.eth.Contract(FastBtcBridge, fastBtcBridgeAddress);\r\n\r\n            const fastBtcTransferToBtc= () => {\r\n                return new Promise((resolve, reject) => {\r\n                    setImgTrx('icon-processing.svg')\r\n                    setIsVisible(false)\r\n                    setlabelTrx('Waiting')\r\n                    fastBtcBridge.methods.transferToBtc(props.rbtcAddress).send(\r\n                        [props.rbtcAddress],\r\n                        {\r\n                            from: accountData.Owner,\r\n                            value: toContract(web3.utils.toWei(`${parseFloat(props.rbtcAmount)}`, 'ether')),\r\n                            gas: 300000\r\n                        }).then(response => {\r\n                        web3.eth.getTransactionReceipt(response.transactionHash)\r\n                            .then(responseRSKTopics => {\r\n                                setlabelTrx('Waiting')\r\n                                setCompleted(true);\r\n                                setIsVisible(true)\r\n                                setButtonCompleted('Close')\r\n                                setlabelTxid(responseRSKTopics['transactionHash']);\r\n                                setCompleted(true);\r\n                                if (\r\n                                    responseRSKTopics.logs &&\r\n                                    responseRSKTopics.logs.length > 0 &&\r\n                                    responseRSKTopics.logs[0].topics &&\r\n                                    responseRSKTopics.logs[0].topics.length === 3\r\n                                ) {\r\n                                    setIntervalBTCCheck(setInterval(() => {\r\n                                        checkTransferBTCProgress(responseRSKTopics.logs[0].topics[1]);\r\n                                    }, 30000));\r\n                                }\r\n                            })\r\n                            .catch(error => {\r\n                                //setIsPending(false);\r\n                                setLabelColor(\"red\");\r\n                                setlabelTrx('Failed');\r\n                                setCompleted(true);\r\n                                setIsVisible(true)\r\n                                setButtonCompleted('Close')\r\n                                setlabelTxid(error['transactionHash']);\r\n                                console.log(\"fail\", error);\r\n                            });\r\n                        resolve(response);\r\n                    })\r\n                        .catch(error => {\r\n                            setLabelColor(\"red\");\r\n                            setlabelTrx('Failed');\r\n                            setCompleted(true);\r\n                            setIsVisible(true)\r\n                            setButtonCompleted('Close')\r\n                            setlabelTxid(error['transactionHash']);\r\n                            reject(error);\r\n                            setCompleted(true);\r\n                        });\r\n                });\r\n            };\r\n\r\n            fastBtcTransferToBtc().then(result => {});\r\n        }\r\n    };\r\n\r\n    const checkTransferBTCProgress = (transferId) => {\r\n        setLabelColor(\"white\");\r\n        setlabelTrx(\"Initializing\");\r\n        fastBtcBridge.methods.getTransferByTransferId(transferId)\r\n            .call()\r\n            .then(responseBTC => {\r\n                switch (responseBTC.status) {\r\n                    case \"0\": {\r\n                        setLabelColor(\"white\");\r\n                        setlabelTrx(\"Initializing\");\r\n                        break;\r\n                    }\r\n                    case \"1\": {\r\n                        setLabelColor(\"white\");\r\n                        setlabelTrx(\"Validating\");\r\n                        break;\r\n                    }\r\n                    case \"2\": {\r\n                        setLabelColor(\"white\");\r\n                        setlabelTrx(\"Pending\");\r\n                        break;\r\n                    }\r\n                    case \"3\": {\r\n                        setLabelColor(\"green\");\r\n                        setlabelTrx(\"Confirmed\");\r\n                        setImgTrx(\"icon-confirmed.svg\");\r\n                        clearInterval(intervalBTCCheck);\r\n                        setIntervalBTCCheck(null);\r\n                        break;\r\n                    }\r\n                    case \"4\": {\r\n                        console.log(\"44444444444444\")\r\n                        console.log(responseBTC.status)\r\n                        setLabelColor(\"red\");\r\n                        setlabelTrx(\"Refunded\");\r\n                        clearInterval(intervalBTCCheck);\r\n                        setIntervalBTCCheck(null);\r\n                        break;\r\n                    }\r\n                }\r\n                console.log(responseBTC);\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            });\r\n    };\r\n\r\n    const handleSubmit=() => {\r\n        if( completed==false ){\r\n            sendTransaction()\r\n        }\r\n        if( completed==true ){\r\n            handleClose()\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"alert-message-modal\">\r\n                <div className=\"alert-message\">\r\n                    { (labelTrx=='Pending' || labelTrx=='Mined' || labelTrx=='Failed' || labelTrx=='Waiting'\r\n                        || labelTrx=='Initializing' || labelTrx=='Validating') &&\r\n                        <Fragment>\r\n                            <p style={{'display':'flex','width':'100%'}}>\r\n                                <img style={{'flexGrow':'0'}} className={'rotate'} src={imgTrx} alt=\"\" />\r\n                                <span style={{'flexGrow':'1','textAlign':'center','marginTop':'5px','marginLeft':'-45px','color':labelColor}}><b>{labelTrx}</b></span>\r\n                            </p>\r\n                        </Fragment>}\r\n                    { ( (labelTrx!='Pending' && labelTrx!='Mined' && labelTrx!='Failed' && labelTrx!='Waiting'\r\n                        && labelTrx!='Initializing' && labelTrx!='Validating') || (labelTrx=='Confirmed')) &&\r\n                        <p style={{'display':'flex','width':'100%'}}><img style={{'flexGrow':'0'}} src={imgTrx} alt=\"332\" />\r\n                            <span style={{'flexGrow':'1','marginLeft':'10px'}}>{labelTrx}</span>\r\n                        </p>}\r\n                </div>\r\n            </div>\r\n\r\n            <div className={'ModalUpTopContainer'}>\r\n                <div className=\"InputAddressContainer separation\">\r\n                    <p className=\"InputAddressLabel\">\r\n                        Destination Address on BTC Network\r\n                        <br/>\r\n                        <span className=\"rbtc_address\">{props.rbtcAddress}</span>\r\n                    </p>\r\n                    <br/>\r\n                </div>\r\n            </div>\r\n\r\n\r\n            <div className=\"AmountSummary\">\r\n                <div className=\"Detail\">Exchanging</div>\r\n                <div className=\"Amount strong\">{props.rbtcAmount*1} rBTC</div>\r\n            </div>\r\n\r\n            <div className=\"AmountSummary\">\r\n                <div className=\"Detail\">Receiving</div>\r\n                <div className=\"Amount strong\">{amountReceiving} BTC</div>\r\n            </div>\r\n\r\n            <div className=\"AmountSummary\">\r\n                <div className=\"Detail\">Fee</div>\r\n                <div className=\"Amount\">{feesPaid} BTC</div>\r\n            </div>\r\n\r\n            {labelTxid &&\r\n            <div className=\"AmountSummary\">\r\n                <div className=\"Detail\">Tx ID</div>\r\n                <div className=\"Amount\">\r\n                    <Copy textToShow={labelTxid?.slice(0, 5)+'...'+ labelTxid?.slice(-4)} textToCopy={labelTxid} />\r\n                </div>\r\n            </div>\r\n            }\r\n\r\n            <div className=\"GenerateBTC\"  style={{ display: isVisible ? \"block\" : \"none\" }}>\r\n                <Button type=\"primary\" onClick={()=>handleSubmit()}>\r\n                    <b>{buttonCompleted}</b>\r\n                </Button>\r\n            </div>\r\n        </Fragment>\r\n\r\n    );\r\n}\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}