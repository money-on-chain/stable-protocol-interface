{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\micae\\\\OneDrive\\\\Documentos\\\\CoinFabrik\\\\webapp-stable-ipfs\\\\src\\\\Components\\\\Tables\\\\FastBtcPegOut\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect } from 'react';\nimport 'antd/dist/antd.css';\nimport './style.scss';\nimport { Table } from 'antd';\nimport data_json from '../../../services/fatbts_pegout.json';\nimport Moment from 'react-moment';\nimport { useState } from 'react';\nimport { myParseDate, readJsonTableFastBtcPegOut } from '../../../Helpers/helper';\nimport { useTranslation } from \"react-i18next\";\nimport date from '../../../Config/date';\nimport { AuthenticateContext } from \"../../../Context/Auth\";\nimport Copy from \"../../Page/Copy\";\nimport RowDetailPegOut from \"./RowDetailPegOut\";\nimport { DownCircleOutlined, UpCircleOutlined } from \"@ant-design/icons\";\nimport api from \"../../../services/api\";\nimport config from \"../../../Config/config\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function FastBtcPegOut(props) {\n  _s();\n\n  const [current, setCurrent] = useState(1);\n  const [bordered, setBordered] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [pagination, setPagination] = useState({\n    position: 'bottom'\n  });\n  const [size, setSize] = useState('default');\n  const [expandable, setExpandable] = useState({\n    expandedRowRender: record => /*#__PURE__*/_jsxDEV(\"p\", {\n      children: record.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 81\n    }, this)\n  });\n  const [title, setTitle] = useState(undefined);\n  const [showHeader, setShowHeader] = useState(true);\n  const [hasData, setHasData] = useState(true);\n  const [tableLayout, setTableLayout] = useState(undefined);\n  const [top, setTop] = useState('none');\n  const [bottom, setBottom] = useState('bottomRight');\n  const [yScroll, setYScroll] = useState(undefined);\n  const [xScroll, setXScroll] = useState(undefined);\n\n  const BigNumber = require('bignumber.js');\n\n  const [t, i18n] = useTranslation([\"global\", 'moc']);\n  const auth = useContext(AuthenticateContext);\n  const {\n    accountData = {}\n  } = auth;\n  const [dataJson, setDataJson] = useState([]);\n  const [callTable, setCallTable] = useState(false);\n  const [totalTable, setTotalTable] = useState(0);\n  const [currentHash, setCurrentHash] = useState(true);\n  const [timer, setTimer] = useState(100);\n\n  const getFastbtcPegout = (skip, call_table) => {\n    api('get', `${config.api.api_moctest}` + 'webapp/fastbtc/pegout', {\n      address: accountData.Owner\n    }).then(response => {\n      setDataJson(response);\n      console.log('dataJson', response);\n      setTotalTable(response.total);\n\n      if (call_table) {\n        setCallTable(call_table);\n      }\n    }).catch(response => {\n      if (call_table) {\n        setCallTable(call_table);\n      }\n    });\n  };\n\n  const columns = [{\n    title: '',\n    dataIndex: 'info'\n  }, {\n    title: 'Hash Id',\n    dataIndex: 'hashId'\n  }, {\n    title: 'Status',\n    dataIndex: 'status'\n  }, {\n    title: 'BTC Amount',\n    dataIndex: 'btcAmount'\n  }, {\n    title: 'BTC Fee',\n    dataIndex: 'btcFee'\n  }, {\n    title: 'BTC Address',\n    dataIndex: 'btcAddress'\n  }, {\n    title: 'Date Added',\n    dataIndex: 'date'\n  }];\n  useEffect(() => {\n    if (currentHash) {\n      const interval = setInterval(() => {\n        getFastbtcPegout(current);\n        setTimer(30000);\n      }, timer);\n      return () => clearInterval(interval);\n    }\n  });\n  var data = [];\n\n  const onChange = page => {\n    setCurrent(page);\n    data_row(page);\n    getFastbtcPegout(page, true);\n  };\n\n  const data_row_coins2 = [];\n  var json_end = [];\n\n  const data_row = set_current => {\n    /*******************************sort descending by date lastUpdatedAt***********************************/\n    if (dataJson.transactions !== undefined) {\n      dataJson.pegout_requests.sort((a, b) => {\n        return myParseDate(b.updated) - myParseDate(a.updated);\n      });\n    }\n    /*******************************end sort descending by date lastUpdatedAt***********************************/\n\n    /*******************************set json group according to limits***********************************/\n\n\n    json_end = dataJson.pegout_requests;\n    /*******************************end set json group according to limits***********************************/\n\n    /*******************************extraer datos del json con el json seteado por limit y skip***********************************/\n\n    data = [];\n    console.log('json_end', json_end);\n\n    if (json_end !== undefined) {\n      json_end.forEach(data_j => {\n        const datas_response = readJsonTableFastBtcPegOut(data_j);\n        const detail = {\n          status: /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: '#478210'\n            },\n            children: datas_response['status']\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 33\n          }, this),\n          btcAmount: datas_response['btcAmount'],\n          btcFee: datas_response['btcFee'],\n          btcAddress: /*#__PURE__*/_jsxDEV(Copy, {\n            textToShow: datas_response['btcAddressCut'],\n            textToCopy: datas_response['btcAddress']\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 38\n          }, this),\n          date: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: /*#__PURE__*/_jsxDEV(Moment, {\n              format: i18n.language === \"en\" ? date.DATE_EN : date.DATE_ES,\n              children: datas_response['date']\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 38\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 32\n          }, this),\n          timestamp: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: /*#__PURE__*/_jsxDEV(Moment, {\n              format: i18n.language === \"en\" ? date.DATE_EN : date.DATE_ES,\n              children: datas_response['timestamp']\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 43\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 37\n          }, this),\n          transactionHash: /*#__PURE__*/_jsxDEV(Copy, {\n            textToShow: datas_response['transactionHashCut'],\n            textToCopy: datas_response['transactionHash']\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 43\n          }, this),\n          transId: /*#__PURE__*/_jsxDEV(Copy, {\n            textToShow: datas_response['hash_id_cut'],\n            textToCopy: datas_response['hashId']\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 35\n          }, this),\n          blockNumber: datas_response['blockNumber'],\n          rskAddress: /*#__PURE__*/_jsxDEV(Copy, {\n            textToShow: datas_response['rskAddressCut'],\n            textToCopy: datas_response['rskAddress']\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 38\n          }, this),\n          transactionHashLastUpdated: /*#__PURE__*/_jsxDEV(Copy, {\n            textToShow: datas_response['transactionHashLastUpdated'],\n            textToCopy: datas_response['transactionHashLastUpdated']\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 54\n          }, this)\n        };\n        data_row_coins2.push({\n          key: datas_response['hashId'],\n          hashId: /*#__PURE__*/_jsxDEV(Copy, {\n            textToShow: datas_response['transactionHashCut'],\n            textToCopy: datas_response['transactionHash']\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 34\n          }, this),\n          status: /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: '#478210'\n            },\n            children: datas_response['status']\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 34\n          }, this),\n          btcAmount: datas_response['btcAmount'],\n          btcFee: datas_response['btcFee'],\n          btcAddress: /*#__PURE__*/_jsxDEV(Copy, {\n            textToShow: datas_response['btcAddressCut'],\n            textToCopy: datas_response['btcAddress']\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 38\n          }, this),\n          date: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: /*#__PURE__*/_jsxDEV(Moment, {\n              format: i18n.language === \"en\" ? date.DATE_EN : date.DATE_ES,\n              children: datas_response['date']\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 38\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 32\n          }, this),\n          detail: detail\n        });\n      });\n      data_row_coins2.forEach((element, index) => {\n        data.push({\n          key: element.key,\n          info: '',\n          hashId: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: element.hashId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 29\n          }, this),\n          status: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: element.status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 29\n          }, this),\n          btcAmount: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: element.btcAmount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 32\n          }, this),\n          btcFee: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: element.btcFee\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 29\n          }, this),\n          btcAddress: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: element.btcAddress\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 33\n          }, this),\n          date: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: element.date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 27\n          }, this),\n          description: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: 'div-table-in',\n            children: /*#__PURE__*/_jsxDEV(RowDetailPegOut, {\n              detail: element.detail\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 66\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 34\n          }, this)\n        });\n      });\n    }\n    /*******************************end extraer datos del json con el json seteado por limit y skip***********************************/\n\n  };\n\n  data_row(current); //const { xScroll, yScroll, ...state } = this.state;\n\n  const scroll = {};\n\n  if (yScroll) {\n    scroll.y = 240;\n  }\n\n  if (xScroll) {\n    scroll.x = '100vw';\n  }\n\n  const tableColumns = columns.map(item => ({ ...item\n  }));\n\n  if (xScroll === 'fixed') {\n    tableColumns[0].fixed = true;\n    tableColumns[tableColumns.length - 1].fixed = 'right';\n  }\n\n  const state = {\n    bordered,\n    loading,\n    pagination,\n    size,\n    expandable,\n    title,\n    showHeader,\n    scroll,\n    hasData,\n    tableLayout,\n    top,\n    bottom,\n    yScroll,\n    xScroll\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Table, { ...state,\n      expandable: {\n        expandedRowRender: record => /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            margin: 0\n          },\n          children: record.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 25\n        }, this),\n        expandIcon: _ref => {\n          let {\n            expanded,\n            onExpand,\n            record\n          } = _ref;\n          return expanded ? /*#__PURE__*/_jsxDEV(UpCircleOutlined, {\n            onClick: e => onExpand(record, e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(DownCircleOutlined, {\n            onClick: e => onExpand(record, e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 29\n          }, this);\n        }\n      },\n      pagination: {\n        pageSize: 10,\n        position: [top, bottom],\n        defaultCurrent: 1,\n        onChange: onChange,\n        total: totalTable\n      },\n      columns: tableColumns,\n      dataSource: hasData ? auth.isLoggedIn == true ? data : null : null,\n      scroll: scroll\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(FastBtcPegOut, \"za61tk7/fHZ5RIk5kqrC2Trcsj4=\", false, function () {\n  return [useTranslation];\n});\n\n_c = FastBtcPegOut;\n\nvar _c;\n\n$RefreshReg$(_c, \"FastBtcPegOut\");","map":{"version":3,"names":["React","useContext","useEffect","Table","data_json","Moment","useState","myParseDate","readJsonTableFastBtcPegOut","useTranslation","date","AuthenticateContext","Copy","RowDetailPegOut","DownCircleOutlined","UpCircleOutlined","api","config","FastBtcPegOut","props","current","setCurrent","bordered","setBordered","loading","setLoading","pagination","setPagination","position","size","setSize","expandable","setExpandable","expandedRowRender","record","description","title","setTitle","undefined","showHeader","setShowHeader","hasData","setHasData","tableLayout","setTableLayout","top","setTop","bottom","setBottom","yScroll","setYScroll","xScroll","setXScroll","BigNumber","require","t","i18n","auth","accountData","dataJson","setDataJson","callTable","setCallTable","totalTable","setTotalTable","currentHash","setCurrentHash","timer","setTimer","getFastbtcPegout","skip","call_table","api_moctest","address","Owner","then","response","console","log","total","catch","columns","dataIndex","interval","setInterval","clearInterval","data","onChange","page","data_row","data_row_coins2","json_end","set_current","transactions","pegout_requests","sort","a","b","updated","forEach","data_j","datas_response","detail","status","color","btcAmount","btcFee","btcAddress","language","DATE_EN","DATE_ES","timestamp","transactionHash","transId","blockNumber","rskAddress","transactionHashLastUpdated","push","key","hashId","element","index","info","scroll","y","x","tableColumns","map","item","fixed","length","state","margin","expandIcon","expanded","onExpand","e","pageSize","defaultCurrent","isLoggedIn"],"sources":["C:/Users/micae/OneDrive/Documentos/CoinFabrik/webapp-stable-ipfs/src/Components/Tables/FastBtcPegOut/index.jsx"],"sourcesContent":["import React, {useContext, useEffect} from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport './style.scss';\r\nimport { Table } from 'antd';\r\nimport data_json from '../../../services/fatbts_pegout.json';\r\nimport Moment from 'react-moment';\r\nimport { useState } from 'react'\r\nimport { myParseDate, readJsonTableFastBtcPegOut} from '../../../Helpers/helper'\r\nimport { useTranslation } from \"react-i18next\";\r\nimport date from '../../../Config/date';\r\nimport {AuthenticateContext} from \"../../../Context/Auth\";\r\nimport Copy from \"../../Page/Copy\";\r\nimport RowDetailPegOut from \"./RowDetailPegOut\";\r\nimport {DownCircleOutlined, UpCircleOutlined} from \"@ant-design/icons\";\r\nimport api from \"../../../services/api\";\r\nimport config from \"../../../Config/config\";\r\n\r\nexport default function FastBtcPegOut(props) {\r\n\r\n    const [current, setCurrent] = useState(1);\r\n    const [bordered, setBordered] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n    const [pagination, setPagination] = useState({ position: 'bottom' });\r\n    const [size, setSize] = useState('default');\r\n    const [expandable, setExpandable] = useState({ expandedRowRender: record => <p>{record.description}</p> });\r\n\r\n    const [title, setTitle] = useState(undefined);\r\n    const [showHeader, setShowHeader] = useState(true);\r\n    const [hasData, setHasData] = useState(true);\r\n    const [tableLayout, setTableLayout] = useState(undefined);\r\n    const [top, setTop] = useState('none');\r\n    const [bottom, setBottom] = useState('bottomRight');\r\n\r\n    const [yScroll, setYScroll] = useState(undefined);\r\n    const [xScroll, setXScroll] = useState(undefined);\r\n    const BigNumber = require('bignumber.js');\r\n\r\n    const [t, i18n] = useTranslation([\"global\", 'moc']);\r\n    const auth = useContext(AuthenticateContext);\r\n    const { accountData = {} } = auth;\r\n    const [dataJson, setDataJson]=  useState([]);\r\n    const [callTable, setCallTable]=  useState(false);\r\n    const [totalTable, setTotalTable]=  useState(0);\r\n    const [currentHash, setCurrentHash] = useState(true);\r\n    const [timer, setTimer] = useState(100);\r\n\r\n\r\n    const getFastbtcPegout= (skip,call_table) => {\r\n        api('get', `${config.api.api_moctest}`+'webapp/fastbtc/pegout', {address: accountData.Owner })\r\n            .then(response => {\r\n                setDataJson(response);\r\n                console.log('dataJson', response);\r\n                setTotalTable(response.total)\r\n                if(call_table){\r\n                    setCallTable(call_table)\r\n                }\r\n            })\r\n            .catch((response) => {\r\n                if(call_table){\r\n                    setCallTable(call_table)\r\n                }\r\n            });\r\n    };\r\n\r\n    const columns = [\r\n        {\r\n            title: '',\r\n            dataIndex: 'info',\r\n        },\r\n\r\n        {\r\n            title: 'Hash Id',\r\n            dataIndex: 'hashId',\r\n        },\r\n        {\r\n            title: 'Status',\r\n            dataIndex: 'status',\r\n        },\r\n        {\r\n            title: 'BTC Amount',\r\n            dataIndex: 'btcAmount',\r\n        },\r\n        {\r\n            title: 'BTC Fee',\r\n            dataIndex: 'btcFee',\r\n        },\r\n        {\r\n            title: 'BTC Address',\r\n            dataIndex: 'btcAddress',\r\n        },\r\n        {\r\n            title: 'Date Added',\r\n            dataIndex: 'date',\r\n        },\r\n    ];\r\n\r\n    useEffect(() => {\r\n        if (currentHash) {\r\n            const interval = setInterval(() => {\r\n                getFastbtcPegout(current)\r\n                setTimer(30000)\r\n            }, timer);\r\n            return () => clearInterval(interval);\r\n        }\r\n    });\r\n\r\n    var data = [];\r\n\r\n    const onChange = (page) => {\r\n        setCurrent(page);\r\n        data_row(page);\r\n        getFastbtcPegout(page,true)\r\n    };\r\n\r\n    const data_row_coins2 = [];\r\n    var json_end = []\r\n    const data_row = (set_current) => {\r\n        /*******************************sort descending by date lastUpdatedAt***********************************/\r\n        if(dataJson.transactions!==undefined){\r\n            dataJson.pegout_requests.sort((a, b) => {\r\n                return myParseDate(b.updated) - myParseDate(a.updated)\r\n            });\r\n        }\r\n        /*******************************end sort descending by date lastUpdatedAt***********************************/\r\n\r\n        /*******************************set json group according to limits***********************************/\r\n        json_end = dataJson.pegout_requests\r\n        /*******************************end set json group according to limits***********************************/\r\n\r\n        /*******************************extraer datos del json con el json seteado por limit y skip***********************************/\r\n        data = [];\r\n        console.log('json_end', json_end);\r\n\r\n        if(json_end!==undefined){\r\n            json_end.forEach((data_j) => {\r\n                const datas_response = readJsonTableFastBtcPegOut(data_j)\r\n                    const detail = {\r\n                        status: <span style={{color:'#478210'}}>{datas_response['status']}</span>\r\n                        ,btcAmount: datas_response['btcAmount']\r\n                        ,btcFee: datas_response['btcFee']\r\n                        ,btcAddress: <Copy textToShow={datas_response['btcAddressCut']} textToCopy={datas_response['btcAddress']} />\r\n                        ,date: <span><Moment format={(i18n.language === \"en\") ? date.DATE_EN : date.DATE_ES}>{datas_response['date']}</Moment></span>\r\n                        ,timestamp: <span><Moment format={(i18n.language === \"en\") ? date.DATE_EN : date.DATE_ES}>{datas_response['timestamp']}</Moment></span>\r\n                        ,transactionHash: <Copy textToShow={datas_response['transactionHashCut']} textToCopy={datas_response['transactionHash']} />\r\n                        ,transId: <Copy textToShow={datas_response['hash_id_cut']} textToCopy={datas_response['hashId']} />\r\n                        ,blockNumber: datas_response['blockNumber']\r\n                        ,rskAddress: <Copy textToShow={datas_response['rskAddressCut']} textToCopy={datas_response['rskAddress']} />\r\n                        ,transactionHashLastUpdated: <Copy textToShow={datas_response['transactionHashLastUpdated']} textToCopy={datas_response['transactionHashLastUpdated']} />\r\n\r\n                    }\r\n\r\n                    data_row_coins2.push({\r\n                        key: datas_response['hashId']\r\n                        ,hashId: <Copy textToShow={datas_response['transactionHashCut']} textToCopy={datas_response['transactionHash']} />\r\n                        ,status: <span style={{color:'#478210'}}>{datas_response['status']}</span>\r\n                        ,btcAmount: datas_response['btcAmount']\r\n                        ,btcFee: datas_response['btcFee']\r\n                        ,btcAddress: <Copy textToShow={datas_response['btcAddressCut']} textToCopy={datas_response['btcAddress']} />\r\n                        ,date: <span><Moment format={(i18n.language === \"en\") ? date.DATE_EN : date.DATE_ES}>{datas_response['date']}</Moment></span>\r\n                        ,detail: detail\r\n                    });\r\n\r\n            });\r\n\r\n\r\n            data_row_coins2.forEach((element, index) => {\r\n                data.push({\r\n                    key: element.key,\r\n                    info: '',\r\n                    hashId: <span >{element.hashId}</span>,\r\n                    status: <span >{element.status}</span>,\r\n                    btcAmount: <span >{element.btcAmount}</span>,\r\n                    btcFee: <span >{element.btcFee}</span>,\r\n                    btcAddress: <span >{element.btcAddress}</span>,\r\n                    date: <span >{element.date}</span>,\r\n                    description: <div className={'div-table-in'}><RowDetailPegOut detail={element.detail} /></div>,\r\n                });\r\n            })\r\n        }\r\n        /*******************************end extraer datos del json con el json seteado por limit y skip***********************************/\r\n    }\r\n\r\n    data_row(current)\r\n\r\n    //const { xScroll, yScroll, ...state } = this.state;\r\n\r\n    const scroll = {};\r\n    if (yScroll) {\r\n        scroll.y = 240;\r\n    }\r\n    if (xScroll) {\r\n        scroll.x = '100vw';\r\n    }\r\n\r\n    const tableColumns = columns.map(item => ({ ...item }));\r\n\r\n    if (xScroll === 'fixed') {\r\n        tableColumns[0].fixed = true;\r\n        tableColumns[tableColumns.length - 1].fixed = 'right';\r\n    }\r\n\r\n    const state = {\r\n        bordered,\r\n        loading,\r\n        pagination,\r\n        size,\r\n        expandable,\r\n        title,\r\n        showHeader,\r\n        scroll,\r\n        hasData,\r\n        tableLayout,\r\n        top,\r\n        bottom,\r\n        yScroll,\r\n        xScroll,\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Table\r\n                {...state}\r\n                expandable={{\r\n                    expandedRowRender: record => (\r\n                        <p style={{ margin: 0 }}>{record.description}</p>\r\n                    ),\r\n                    expandIcon: ({ expanded, onExpand, record }) =>\r\n                        expanded ? (\r\n                            <UpCircleOutlined onClick={e => onExpand(record, e)} />\r\n                        ) : (\r\n                            <DownCircleOutlined onClick={e => onExpand(record, e)} />\r\n                        )\r\n                }}\r\n                pagination={{pageSize:10, position: [top, bottom], defaultCurrent: 1, onChange:onChange , total: totalTable }}\r\n                columns={tableColumns}\r\n                dataSource={hasData ? (auth.isLoggedIn == true) ? data : null : null}\r\n                scroll={scroll}\r\n            />\r\n        </>\r\n    );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}