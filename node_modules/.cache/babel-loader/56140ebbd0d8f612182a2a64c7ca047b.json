{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\micae\\\\OneDrive\\\\Documentos\\\\CoinFabrik\\\\stable-protocol-interface\\\\src\\\\Components\\\\Tables\\\\ListOperations\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect } from 'react';\nimport 'antd/dist/antd.css';\nimport './style.scss';\nimport { Table, Progress, Result, Tooltip, Skeleton } from 'antd';\nimport RowDetail from \"../RowDetail\";\nimport classnames from 'classnames';\nimport api from '../../../services/api';\nimport Moment from 'react-moment';\nimport { useState } from 'react';\nimport { readJsonTable, setNumber, myParseDate, getDatasMetrics } from '../../../Helpers/helper';\nimport { config } from '../../../Config/config';\nimport Copy from \"../../Page/Copy\";\nimport { useTranslation } from \"react-i18next\";\nimport date from '../../../Config/date';\nimport { AuthenticateContext } from \"../../../Context/Auth\";\nimport { InfoCircleOutlined } from \"@ant-design/icons\";\nimport { DownCircleOutlined, UpCircleOutlined } from \"@ant-design/icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ListOperations(props) {\n  _s();\n\n  const {\n    token\n  } = props;\n  const [current, setCurrent] = useState(1);\n  const [bordered, setBordered] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [pagination, setPagination] = useState({\n    position: 'bottom'\n  });\n  const [size, setSize] = useState('default');\n  const [expandable, setExpandable] = useState({\n    expandedRowRender: record => /*#__PURE__*/_jsxDEV(\"p\", {\n      children: record.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 81\n    }, this)\n  });\n  const [title, setTitle] = useState(undefined);\n  const [showHeader, setShowHeader] = useState(true);\n  const [hasData, setHasData] = useState(true);\n  const [tableLayout, setTableLayout] = useState(undefined);\n  const [top, setTop] = useState('none');\n  const [bottom, setBottom] = useState('bottomRight');\n  const [yScroll, setYScroll] = useState(undefined);\n  const [xScroll, setXScroll] = useState(undefined);\n  const [t, i18n] = useTranslation([\"global\", 'moc']);\n  const auth = useContext(AuthenticateContext);\n  const {\n    accountData = {}\n  } = auth;\n  const [currencyCode, setCurrencyCode] = useState('MOC');\n  const [dataJson, setDataJson] = useState([]);\n  const [callTable, setCallTable] = useState(false);\n  const [totalTable, setTotalTable] = useState(0);\n  const [currentHash, setCurrentHash] = useState(true);\n  const [timer, setTimer] = useState(100);\n  const [loadingSke, setLoadingSke] = useState(true);\n  const timeSke = 1500;\n  useEffect(() => {\n    setTimeout(() => setLoading(false), timeSke);\n  }, [auth]);\n\n  const transactionsList = (skip, call_table) => {\n    const datas = token != 'all' ? {\n      address: accountData.Owner,\n      limit: 20,\n      skip: (skip - 1 + (skip - 1)) * 10,\n      token: token\n    } : {\n      address: accountData.Owner,\n      limit: 20,\n      skip: (skip - 1 + (skip - 1)) * 10\n    };\n    api('get', `${config.api.api_moctest}` + 'webapp/transactions/list/', datas).then(response => {\n      setDataJson(response);\n      setTotalTable(response.total);\n\n      if (call_table) {\n        setCallTable(call_table);\n      }\n    }).catch(response => {\n      console.log(response);\n\n      if (call_table) {\n        setCallTable(call_table);\n      }\n    });\n  };\n\n  const columns = [{\n    title: '',\n    dataIndex: 'info'\n  }, {\n    title: t('MoC.operations.columns.event', {\n      ns: 'moc'\n    }),\n    dataIndex: 'event'\n  }, {\n    title: t('MoC.operations.columns.type', {\n      ns: 'moc'\n    }),\n    dataIndex: 'asset'\n  }, {\n    title: t('MoC.operations.columns.amount', {\n      ns: 'moc'\n    }),\n    dataIndex: 'platform'\n  }, {\n    title: t('MoC.operations.columns.totalBtc', {\n      ns: 'moc'\n    }),\n    dataIndex: 'wallet'\n  }, {\n    title: t('MoC.operations.columns.date', {\n      ns: 'moc'\n    }),\n    dataIndex: 'date'\n  }, {\n    title: t('MoC.operations.columns.status', {\n      ns: 'moc'\n    }),\n    dataIndex: 'status'\n  }];\n  useEffect(() => {\n    if (accountData.Owner !== undefined) {\n      if (currentHash) {\n        transactionsList(current);\n      }\n    }\n\n    if (accountData) {\n      setTimer(30000);\n    }\n  }, [accountData.Owner]);\n  var data = [];\n\n  const onChange = page => {\n    if (accountData !== undefined) {\n      setCurrent(page);\n      data_row(page);\n      transactionsList(page, true);\n    }\n  };\n\n  const data_row_coins2 = [];\n  var json_end = [];\n\n  const data_row = set_current => {\n    /*******************************sort descending by date lastUpdatedAt***********************************/\n    if (dataJson.transactions !== undefined) {\n      dataJson.transactions.sort((a, b) => {\n        return myParseDate(b.lastUpdatedAt) - myParseDate(a.lastUpdatedAt);\n      });\n    }\n    /*******************************end sort descending by date lastUpdatedAt***********************************/\n\n    /*******************************filter by type (token)***********************************/\n\n\n    var pre_datas = [];\n\n    if (dataJson.transactions !== undefined) {\n      pre_datas = dataJson.transactions.filter(data_j => {\n        return token !== 'all' ? data_j.tokenInvolved === token : true;\n      });\n    }\n    /*******************************end filter by type (token)***********************************/\n\n    /*******************************set json group according to limits***********************************/\n\n\n    json_end = pre_datas;\n    /*******************************end set json group according to limits***********************************/\n\n    /*******************************extraer datos del json con el json seteado por limit y skip***********************************/\n\n    data = [];\n    json_end.forEach(data_j => {\n      const datas_response = readJsonTable(data_j, t, i18n);\n      const detail = {\n        event: datas_response['set_event'],\n        created: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: /*#__PURE__*/_jsxDEV(Moment, {\n            format: i18n.language === \"en\" ? date.DATE_EN : date.DATE_ES,\n            children: datas_response['lastUpdatedAt']\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 34\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 28\n        }, this),\n        details: datas_response['RBTCAmount'],\n        asset: datas_response['set_asset'],\n        confirmation: datas_response['confirmationTime'] ? true ? /*#__PURE__*/_jsxDEV(\"span\", {\n          children: /*#__PURE__*/_jsxDEV(Moment, {\n            format: i18n.language === \"en\" ? date.DATE_EN : date.DATE_ES,\n            children: datas_response['confirmationTime']\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 85\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 79\n        }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n          children: /*#__PURE__*/_jsxDEV(Moment, {\n            format: \"YYYY-MM-DD HH:MM:SS\",\n            children: datas_response['confirmationTime']\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 218\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 212\n        }, this) : '',\n        address: datas_response['address'] != '--' ? /*#__PURE__*/_jsxDEV(Copy, {\n          textToShow: datas_response['truncate_address'],\n          textToCopy: datas_response['address']\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 63\n        }, this) : '--',\n        platform: datas_response['amount'],\n        platform_fee: datas_response['platform_fee_value'],\n        block: datas_response['blockNumber'],\n        wallet: datas_response['wallet_value'],\n        interests: datas_response['interests'],\n        tx_hash_truncate: datas_response['tx_hash_truncate'],\n        tx_hash: datas_response['tx_hash'],\n        leverage: datas_response['leverage'],\n        gas_fee: datas_response['gas_fee'],\n        price: datas_response['price'],\n        comments: '--'\n      };\n      data_row_coins2.push({\n        key: data_j._id,\n        info: '',\n        event: datas_response['set_event'],\n        asset: datas_response['set_asset'],\n        // platform: `+ ${datas_response['paltform_detail']}`,\n        // platform: formatVisibleValue(\n        //     datas_response['paltform_detail'],\n        //     'STABLE',\n        //     'es'\n        // ),\n        platform: datas_response['paltform_detail'],\n        // platform: (data_j.amount!==undefined)? <LargeNumber amount={datas_response['paltform_detail']} {...{ currencyCode }} /> : '--',\n        // wallet: (data_j.RBTCAmount!==undefined)? `${wallet_detail} RBTC`:'--',\n        wallet: datas_response['wallet_value_main'],\n        date: datas_response['lastUpdatedAt'],\n        status: {\n          txt: datas_response['set_status_txt'],\n          percent: datas_response['set_status_percent']\n        },\n        detail: detail\n      });\n    });\n    data_row_coins2.forEach((element, index) => {\n      const asset = [];\n\n      switch (element.asset) {\n        case 'STABLE':\n          asset.push({\n            'image': 'icon-stable.svg',\n            'color': 'color-token-stable',\n            'txt': 'DOC'\n          });\n          data_row_coins2[index].detail.asset = t('MoC.Tokens_STABLE_code', {\n            ns: 'moc'\n          });\n          break;\n\n        case 'RISKPRO':\n          asset.push({\n            'image': 'icon-riskpro.svg',\n            'color': 'color-token-riskpro',\n            'txt': 'BPRO'\n          });\n          data_row_coins2[index].detail.asset = t('MoC.Tokens_RISKPRO_code', {\n            ns: 'moc'\n          });\n          break;\n\n        case 'RISKPROX':\n          asset.push({\n            'image': 'icon-riskprox.svg',\n            'color': 'color-token-riskprox',\n            'txt': 'BTCX'\n          });\n          data_row_coins2[index].detail.asset = t('MoC.Tokens_RISKPROX_code', {\n            ns: 'moc'\n          });\n          break;\n\n        default:\n          asset.push({\n            'image': 'icon-stable.svg',\n            'color': 'color-token-stable',\n            'txt': 'DOC'\n          });\n          data_row_coins2[index].detail.asset = t('MoC.Tokens_STABLE_code', {\n            ns: 'moc'\n          });\n          break;\n      }\n\n      data.push({\n        key: element.key,\n        info: '',\n        event: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: classnames('event-action', asset[0].color),\n          children: element.event\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 24\n        }, this),\n        asset: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"uk-preserve-width uk-border-circle\",\n          src: `Moc/` + asset[0].image,\n          alt: \"avatar\",\n          width: 32\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 24\n        }, this),\n        // platform: <span className=\"display-inline CurrencyTx\">{element.platform} {asset[0].txt}</span>,\n        platform: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"display-inline CurrencyTx\",\n          children: element.platform\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 27\n        }, this),\n        wallet: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"display-inline \",\n          children: [element.wallet, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 25\n        }, this),\n        date: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: element.date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 23\n        }, this),\n        status: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: '100%'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Progress, {\n            percent: element.status.percent\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 56\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 101\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: element.status.txt === 'confirmed' ? 'color-confirmed conf_title' : 'color-confirming conf_title',\n            children: element.status.txt\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 107\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 25\n        }, this),\n        description: /*#__PURE__*/_jsxDEV(RowDetail, {\n          detail: element.detail\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 30\n        }, this)\n      });\n    });\n    /*******************************end extraer datos del json con el json seteado por limit y skip***********************************/\n  };\n\n  data_row(current); //const { xScroll, yScroll, ...state } = this.state;\n\n  const scroll = {};\n\n  if (yScroll) {\n    scroll.y = 240;\n  }\n\n  if (xScroll) {\n    scroll.x = '100vw';\n  }\n\n  const tableColumns = columns.map(item => ({ ...item\n  }));\n\n  if (xScroll === 'fixed') {\n    tableColumns[0].fixed = true;\n    tableColumns[tableColumns.length - 1].fixed = 'right';\n  }\n\n  const state = {\n    bordered,\n    loading,\n    pagination,\n    size,\n    expandable,\n    title,\n    showHeader,\n    scroll,\n    hasData,\n    tableLayout,\n    top,\n    bottom,\n    yScroll,\n    xScroll\n  };\n  useEffect(() => {\n    setTimeout(() => setLoadingSke(false), timeSke);\n  }, [auth]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: t('MoC.operations.title', {\n          ns: 'moc'\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n        color: '#404040',\n        placement: \"topLeft\",\n        title: t(\"MoC.operations.tooltip.text\", {\n          ns: 'moc'\n        }),\n        className: \"Tooltip\",\n        children: /*#__PURE__*/_jsxDEV(InfoCircleOutlined, {\n          className: \"Icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 13\n    }, this), !loadingSke ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Table, { ...state,\n        expandable: {\n          expandedRowRender: record => /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              margin: 0\n            },\n            children: record.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 25\n          }, this),\n          expandIcon: _ref => {\n            let {\n              expanded,\n              onExpand,\n              record\n            } = _ref;\n            return expanded ? /*#__PURE__*/_jsxDEV(UpCircleOutlined, {\n              onClick: e => onExpand(record, e)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 29\n            }, this) : /*#__PURE__*/_jsxDEV(DownCircleOutlined, {\n              onClick: e => onExpand(record, e)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 29\n            }, this);\n          }\n        },\n        pagination: {\n          pageSize: 20,\n          position: [top, bottom],\n          defaultCurrent: 1,\n          onChange: onChange,\n          total: totalTable\n        },\n        columns: tableColumns,\n        dataSource: hasData ? auth.isLoggedIn == true ? data : null : null,\n        scroll: scroll\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 13\n      }, this)\n    }, void 0, false) : /*#__PURE__*/_jsxDEV(Skeleton, {\n      active: true,\n      paragraph: {\n        rows: 4\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n}\n\n_s(ListOperations, \"Hx0lQqb4xUohnkBQbISik0wSO3I=\", false, function () {\n  return [useTranslation];\n});\n\n_c = ListOperations;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListOperations\");","map":{"version":3,"names":["React","useContext","useEffect","Table","Progress","Result","Tooltip","Skeleton","RowDetail","classnames","api","Moment","useState","readJsonTable","setNumber","myParseDate","getDatasMetrics","config","Copy","useTranslation","date","AuthenticateContext","InfoCircleOutlined","DownCircleOutlined","UpCircleOutlined","ListOperations","props","token","current","setCurrent","bordered","setBordered","loading","setLoading","pagination","setPagination","position","size","setSize","expandable","setExpandable","expandedRowRender","record","description","title","setTitle","undefined","showHeader","setShowHeader","hasData","setHasData","tableLayout","setTableLayout","top","setTop","bottom","setBottom","yScroll","setYScroll","xScroll","setXScroll","t","i18n","auth","accountData","currencyCode","setCurrencyCode","dataJson","setDataJson","callTable","setCallTable","totalTable","setTotalTable","currentHash","setCurrentHash","timer","setTimer","loadingSke","setLoadingSke","timeSke","setTimeout","transactionsList","skip","call_table","datas","address","Owner","limit","api_moctest","then","response","total","catch","console","log","columns","dataIndex","ns","data","onChange","page","data_row","data_row_coins2","json_end","set_current","transactions","sort","a","b","lastUpdatedAt","pre_datas","filter","data_j","tokenInvolved","forEach","datas_response","detail","event","created","language","DATE_EN","DATE_ES","details","asset","confirmation","platform","platform_fee","block","wallet","interests","tx_hash_truncate","tx_hash","leverage","gas_fee","price","comments","push","key","_id","info","status","txt","percent","element","index","color","image","width","scroll","y","x","tableColumns","map","item","fixed","length","state","margin","expandIcon","expanded","onExpand","e","pageSize","defaultCurrent","isLoggedIn","rows"],"sources":["C:/Users/micae/OneDrive/Documentos/CoinFabrik/stable-protocol-interface/src/Components/Tables/ListOperations/index.jsx"],"sourcesContent":["import React, {useContext, useEffect} from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport './style.scss';\r\nimport {Table, Progress, Result, Tooltip, Skeleton} from 'antd';\r\nimport RowDetail from \"../RowDetail\";\r\nimport classnames from 'classnames';\r\nimport api from '../../../services/api';\r\nimport Moment from 'react-moment';\r\nimport { useState } from 'react'\r\nimport {readJsonTable, setNumber, myParseDate, getDatasMetrics} from '../../../Helpers/helper'\r\nimport {config} from '../../../Config/config';\r\nimport Copy from \"../../Page/Copy\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport date from '../../../Config/date';\r\nimport {AuthenticateContext} from \"../../../Context/Auth\";\r\nimport {InfoCircleOutlined} from \"@ant-design/icons\";\r\nimport {DownCircleOutlined, UpCircleOutlined} from \"@ant-design/icons\";\r\n\r\n\r\nexport default function ListOperations(props) {\r\n    const { token } = props;\r\n    const [current, setCurrent] = useState(1);\r\n    const [bordered, setBordered] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n    const [pagination, setPagination] = useState({ position: 'bottom' });\r\n    const [size, setSize] = useState('default');\r\n    const [expandable, setExpandable] = useState({ expandedRowRender: record => <p>{record.description}</p> });\r\n\r\n    const [title, setTitle] = useState(undefined);\r\n    const [showHeader, setShowHeader] = useState(true);\r\n    const [hasData, setHasData] = useState(true);\r\n    const [tableLayout, setTableLayout] = useState(undefined);\r\n    const [top, setTop] = useState('none');\r\n    const [bottom, setBottom] = useState('bottomRight');\r\n    const [yScroll, setYScroll] = useState(undefined);\r\n    const [xScroll, setXScroll] = useState(undefined);\r\n\r\n    const [t, i18n] = useTranslation([\"global\", 'moc']);\r\n    const auth = useContext(AuthenticateContext);\r\n    const { accountData = {} } = auth;\r\n    const [currencyCode, setCurrencyCode]=  useState('MOC');\r\n    const [dataJson, setDataJson]=  useState([]);\r\n    const [callTable, setCallTable]=  useState(false);\r\n    const [totalTable, setTotalTable]=  useState(0);\r\n    const [currentHash, setCurrentHash] = useState(true);\r\n    const [timer, setTimer] = useState(100);\r\n\r\n    const [loadingSke, setLoadingSke] = useState(true);\r\n    const timeSke= 1500\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => setLoading(false), timeSke)\r\n    },[auth]);\r\n\r\n    const transactionsList= (skip,call_table) => {\r\n        const datas= (token!='all')?{address: accountData.Owner,limit:20,skip:(((skip-1)+(skip-1))*10),token:token} : {address: accountData.Owner,limit:20,skip:(((skip-1)+(skip-1))*10)}\r\n        api('get', `${config.api.api_moctest}`+'webapp/transactions/list/', datas)\r\n            .then(response => {\r\n                setDataJson(response);\r\n                setTotalTable(response.total)\r\n                if(call_table){\r\n                    setCallTable(call_table)\r\n                }\r\n            })\r\n            .catch((response) => {\r\n                console.log(response);\r\n                if(call_table){\r\n                    setCallTable(call_table)\r\n                }\r\n            });\r\n    };\r\n\r\n\r\n\r\n    const columns = [\r\n        {\r\n            title: '',\r\n            dataIndex: 'info',\r\n        },\r\n\r\n        {\r\n            title: t('MoC.operations.columns.event', { ns: 'moc' }),\r\n            dataIndex: 'event',\r\n        },\r\n        {\r\n            title: t('MoC.operations.columns.type', { ns: 'moc' }),\r\n            dataIndex: 'asset',\r\n        },\r\n        {\r\n            title: t('MoC.operations.columns.amount', { ns: 'moc' }),\r\n            dataIndex: 'platform',\r\n        },\r\n        {\r\n            title: t('MoC.operations.columns.totalBtc', { ns: 'moc' }),\r\n            dataIndex: 'wallet',\r\n        },\r\n        {\r\n            title: t('MoC.operations.columns.date', { ns: 'moc' }),\r\n            dataIndex: 'date',\r\n        },\r\n        {\r\n            title: t('MoC.operations.columns.status', { ns: 'moc' }),\r\n            dataIndex: 'status',\r\n        },\r\n    ];\r\n\r\n    useEffect(() => {\r\n        if(accountData.Owner!==undefined){\r\n            if (currentHash) {\r\n                transactionsList(current)\r\n            }\r\n        }\r\n        if (accountData) {\r\n            setTimer(30000)\r\n        }\r\n    },[accountData.Owner]);\r\n\r\n    var data = [];\r\n\r\n    const onChange = (page) => {\r\n        if( accountData!== undefined ){\r\n            setCurrent(page);\r\n            data_row(page);\r\n            transactionsList(page,true)\r\n        }\r\n    };\r\n\r\n    const data_row_coins2 = [];\r\n    var json_end = []\r\n    const data_row = (set_current) => {\r\n        /*******************************sort descending by date lastUpdatedAt***********************************/\r\n        if(dataJson.transactions!==undefined){\r\n            dataJson.transactions.sort((a, b) => {\r\n                return myParseDate(b.lastUpdatedAt) - myParseDate(a.lastUpdatedAt)\r\n            });\r\n        }\r\n        /*******************************end sort descending by date lastUpdatedAt***********************************/\r\n\r\n        /*******************************filter by type (token)***********************************/\r\n        var pre_datas = [];\r\n        if(dataJson.transactions!==undefined){\r\n            pre_datas= dataJson.transactions.filter(data_j => {\r\n                return (token !== 'all') ? data_j.tokenInvolved === token : true;\r\n            });\r\n        }\r\n        /*******************************end filter by type (token)***********************************/\r\n\r\n        /*******************************set json group according to limits***********************************/\r\n        json_end = pre_datas\r\n        /*******************************end set json group according to limits***********************************/\r\n\r\n        /*******************************extraer datos del json con el json seteado por limit y skip***********************************/\r\n        data = [];\r\n\r\n        json_end.forEach((data_j) => {\r\n            const datas_response = readJsonTable(data_j,t,i18n)\r\n\r\n            const detail = {\r\n                event: datas_response['set_event']\r\n                , created: <span><Moment format={(i18n.language === \"en\") ? date.DATE_EN : date.DATE_ES}>{datas_response['lastUpdatedAt']}</Moment></span>\r\n                , details: datas_response['RBTCAmount']\r\n                , asset: datas_response['set_asset']\r\n                , confirmation: datas_response['confirmationTime'] ? (true) ? <span><Moment format={(i18n.language === \"en\") ? date.DATE_EN : date.DATE_ES}>{datas_response['confirmationTime']}</Moment></span> : <span><Moment format=\"YYYY-MM-DD HH:MM:SS\">{datas_response['confirmationTime']}</Moment></span> : ''\r\n                , address: (datas_response['address']!='--')? <Copy textToShow={datas_response['truncate_address']} textToCopy={datas_response['address']} /> : '--'\r\n                , platform: datas_response['amount']\r\n                , platform_fee: datas_response['platform_fee_value']\r\n                , block: datas_response['blockNumber']\r\n                , wallet: datas_response['wallet_value']\r\n                , interests: datas_response['interests']\r\n                , tx_hash_truncate: datas_response['tx_hash_truncate']\r\n                , tx_hash: datas_response['tx_hash']\r\n                , leverage: datas_response['leverage']\r\n                , gas_fee: datas_response['gas_fee']\r\n                , price: datas_response['price']\r\n                , comments: '--'\r\n            };\r\n\r\n            data_row_coins2.push({\r\n                key: data_j._id,\r\n                info: '',\r\n                event: datas_response['set_event'],\r\n                asset: datas_response['set_asset'],\r\n                // platform: `+ ${datas_response['paltform_detail']}`,\r\n                // platform: formatVisibleValue(\r\n                //     datas_response['paltform_detail'],\r\n                //     'STABLE',\r\n                //     'es'\r\n                // ),\r\n                platform: datas_response['paltform_detail'],\r\n                // platform: (data_j.amount!==undefined)? <LargeNumber amount={datas_response['paltform_detail']} {...{ currencyCode }} /> : '--',\r\n                // wallet: (data_j.RBTCAmount!==undefined)? `${wallet_detail} RBTC`:'--',\r\n                wallet: datas_response['wallet_value_main'],\r\n                date: datas_response['lastUpdatedAt'],\r\n                status: { txt: datas_response['set_status_txt'], percent: datas_response['set_status_percent'] },\r\n                detail: detail,\r\n            });\r\n\r\n        });\r\n        data_row_coins2.forEach((element, index) => {\r\n            const asset = [];\r\n\r\n            switch (element.asset) {\r\n                case 'STABLE':\r\n                    asset.push({ 'image': 'icon-stable.svg', 'color': 'color-token-stable', 'txt': 'DOC' });\r\n                    data_row_coins2[index].detail.asset = t('MoC.Tokens_STABLE_code', { ns: 'moc' });\r\n                    break;\r\n                case 'RISKPRO':\r\n                    asset.push({ 'image': 'icon-riskpro.svg', 'color': 'color-token-riskpro', 'txt': 'BPRO' });\r\n                    data_row_coins2[index].detail.asset = t('MoC.Tokens_RISKPRO_code', { ns: 'moc' });\r\n                    break;\r\n                case 'RISKPROX':\r\n                    asset.push({ 'image': 'icon-riskprox.svg', 'color': 'color-token-riskprox', 'txt': 'BTCX' });\r\n                    data_row_coins2[index].detail.asset = t('MoC.Tokens_RISKPROX_code', { ns: 'moc' });\r\n                    break;\r\n                default:\r\n                    asset.push({ 'image': 'icon-stable.svg', 'color': 'color-token-stable', 'txt': 'DOC' });\r\n                    data_row_coins2[index].detail.asset = t('MoC.Tokens_STABLE_code', { ns: 'moc' });\r\n                    break;\r\n            }\r\n\r\n            data.push({\r\n                key: element.key,\r\n                info: '',\r\n                event: <span className={classnames('event-action', asset[0].color)}>{element.event}</span>,\r\n                asset: <img className=\"uk-preserve-width uk-border-circle\" src={`Moc/` + asset[0].image} alt=\"avatar\" width={32} />,\r\n                // platform: <span className=\"display-inline CurrencyTx\">{element.platform} {asset[0].txt}</span>,\r\n                platform: <span className=\"display-inline CurrencyTx\">{element.platform}</span>,\r\n                wallet: <span className=\"display-inline \">{element.wallet} </span>,\r\n                date: <span>{element.date}</span>,\r\n                status: <div style={{ width: '100%' }}><Progress percent={element.status.percent} /><br /><span\r\n                    className={element.status.txt === 'confirmed' ? 'color-confirmed conf_title' : 'color-confirming conf_title'}>{element.status.txt}</span></div>,\r\n                description: <RowDetail detail={element.detail} />,\r\n            });\r\n\r\n        })\r\n        /*******************************end extraer datos del json con el json seteado por limit y skip***********************************/\r\n    }\r\n\r\n    data_row(current)\r\n\r\n    //const { xScroll, yScroll, ...state } = this.state;\r\n\r\n    const scroll = {};\r\n    if (yScroll) {\r\n        scroll.y = 240;\r\n    }\r\n    if (xScroll) {\r\n        scroll.x = '100vw';\r\n    }\r\n\r\n    const tableColumns = columns.map(item => ({ ...item }));\r\n\r\n    if (xScroll === 'fixed') {\r\n        tableColumns[0].fixed = true;\r\n        tableColumns[tableColumns.length - 1].fixed = 'right';\r\n    }\r\n\r\n    const state = {\r\n        bordered,\r\n        loading,\r\n        pagination,\r\n        size,\r\n        expandable,\r\n        title,\r\n        showHeader,\r\n        scroll,\r\n        hasData,\r\n        tableLayout,\r\n        top,\r\n        bottom,\r\n        yScroll,\r\n        xScroll,\r\n    }\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => setLoadingSke(false), timeSke)\r\n    },[auth]);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"title\">\r\n                <h1>{t('MoC.operations.title', { ns: 'moc' })}</h1>\r\n                <Tooltip color={'#404040'} placement=\"topLeft\" title={t(\"MoC.operations.tooltip.text\", { ns: 'moc' })} className='Tooltip'>\r\n                    <InfoCircleOutlined className=\"Icon\" />\r\n                </Tooltip>\r\n            </div>\r\n            {!loadingSke ? <>\r\n            <Table\r\n                {...state}\r\n                expandable={{\r\n                    expandedRowRender: record => (\r\n                        <p style={{ margin: 0 }}>{record.description}</p>\r\n                    ),\r\n                    expandIcon: ({ expanded, onExpand, record }) =>\r\n                        expanded ? (\r\n                            <UpCircleOutlined onClick={e => onExpand(record, e)} />\r\n                        ) : (\r\n                            <DownCircleOutlined onClick={e => onExpand(record, e)} />\r\n                        )\r\n                }}\r\n                pagination={{pageSize:20, position: [top, bottom], defaultCurrent: 1, onChange:onChange , total: totalTable }}\r\n                columns={tableColumns}\r\n                dataSource={hasData ? (auth.isLoggedIn == true) ? data : null : null}\r\n                scroll={scroll}\r\n            /></>:\r\n                <Skeleton active={true}  paragraph={{ rows: 4 }}></Skeleton>\r\n            }\r\n        </>\r\n    );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}