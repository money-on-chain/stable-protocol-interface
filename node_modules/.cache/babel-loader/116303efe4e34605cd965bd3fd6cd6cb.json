{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\micae\\\\OneDrive\\\\Documentos\\\\CoinFabrik\\\\stable-protocol-interface\\\\src\\\\Components\\\\Cards\\\\AmountCard\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport { Row, Col, Tooltip, Alert, Skeleton } from 'antd';\nimport { InfoCircleOutlined } from '@ant-design/icons';\nimport _ from 'lodash/core';\nimport React, { Fragment, useEffect, useState } from 'react';\nimport { useContext } from 'react';\nimport { AuthenticateContext } from '../../../Context/Auth';\nimport { LargeNumber } from '../../LargeNumber';\nimport { useTranslation } from \"react-i18next\";\nimport { set_doc_usd } from \"../../../Helpers/helper\";\nimport { getPriceFields } from '../../../Lib/price';\nimport BalanceItem from '../../BalanceItem/BalanceItem';\nimport InformationModal from '../../Modals/InformationModal';\nimport { formatLocalMap2 } from '../../../Lib/Formats';\nimport './style.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst BigNumber = require('bignumber.js');\n\nexport default function AmountCard(props) {\n  _s();\n\n  var _Number;\n\n  const [t, i18n] = useTranslation([\"global\", 'moc']);\n  const auth = useContext(AuthenticateContext);\n  const {\n    convertToken\n  } = auth;\n  const [loading, setLoading] = useState(true);\n  const [show, setShow] = useState('');\n  const timeSke = 2500;\n  useEffect(() => {\n    setTimeout(() => setLoading(false), timeSke);\n  }, [auth.userBalanceData]);\n  if (!auth) return null;\n  const {\n    tokenName = '',\n    color = '',\n    titleName = ''\n  } = props;\n\n  const getBalance = () => {\n    if (auth.userBalanceData) {\n      switch (tokenName) {\n        case 'STABLE':\n          return auth.userBalanceData['docBalance'];\n\n        case 'RISKPRO':\n          return auth.userBalanceData['bproBalance'];\n\n        case 'RISKPROX':\n          return auth.userBalanceData['bprox2Balance'];\n      }\n    } else {\n      switch (tokenName) {\n        case 'stable':\n          return 0 .toFixed(2);\n\n        case 'riskpro':\n          return 0 .toFixed(6);\n\n        case 'riskprox':\n          return 0 .toFixed(6);\n      }\n    }\n  };\n\n  const getBalanceUSD = () => {\n    if (auth.userBalanceData) {\n      switch (tokenName) {\n        case 'STABLE':\n          return Number(auth.userBalanceData['docBalance']).toFixed(2);\n\n        case 'RISKPRO':\n          return auth.contractStatusData[\"bproPriceInUsd\"];\n\n        case 'RISKPROX':\n          return new BigNumber(auth.contractStatusData['bitcoinPrice'] * auth.userBalanceData['bprox2Balance']).toFixed(4);\n      }\n    } else {\n      return 0 .toFixed(2);\n    }\n  };\n\n  const convertTo = convertToCurrency => convertToken(tokenName, convertToCurrency, getBalance()); // const converToUSD = convertToCurrency => ConvertToken(tokenName, convertToCurrency, getBalanceUSD());\n\n\n  const pre_label = t(`MoC.Tokens_${tokenName.toUpperCase()}_name`, {\n    ns: 'moc'\n  }); // setInterval(() => {\n  //   console.log('Interval triggered');\n  //   setShow(<LargeNumber {...{ amount: getBalance(), currencyCode: tokenName }} />)\n  //   console.log('Interval triggered');\n  // }, 10000);\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Card CardAmount\",\n      children: !loading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            span: 22,\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"CardTitle\",\n              children: t(\"global.TokenSummary_Amount\", {\n                ns: 'global',\n                tokenName: pre_label\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            span: 2,\n            children: /*#__PURE__*/_jsxDEV(InformationModal, {\n              currencyCode: tokenName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              width: 56,\n              src: `Moc/icon-${tokenName.toLowerCase()}.svg`,\n              alt: \"icon-wallet\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          className: \"tokenAndBalance\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"priceContainer\",\n            children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n              title: (_Number = Number(getBalance())) === null || _Number === void 0 ? void 0 : _Number.toLocaleString(formatLocalMap2[i18n.languages[0]]),\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(LargeNumber, {\n                  amount: getBalance(),\n                  currencyCode: tokenName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 106,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"WalletCurrencyPrice\",\n              children: [/*#__PURE__*/_jsxDEV(BalanceItem, {\n                amount: convertTo('RESERVE'),\n                currencyCode: \"RESERVE\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(BalanceItem, {\n                amount: convertTo('USD'),\n                currencyCode: \"USD\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(Skeleton, {\n        active: true,\n        paragraph: {\n          rows: 4\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AmountCard, \"XDScxEkdsR8UNX6VMabh2f2cAVU=\", false, function () {\n  return [useTranslation];\n});\n\n_c = AmountCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"AmountCard\");","map":{"version":3,"names":["Row","Col","Tooltip","Alert","Skeleton","InfoCircleOutlined","_","React","Fragment","useEffect","useState","useContext","AuthenticateContext","LargeNumber","useTranslation","set_doc_usd","getPriceFields","BalanceItem","InformationModal","formatLocalMap2","BigNumber","require","AmountCard","props","t","i18n","auth","convertToken","loading","setLoading","show","setShow","timeSke","setTimeout","userBalanceData","tokenName","color","titleName","getBalance","toFixed","getBalanceUSD","Number","contractStatusData","convertTo","convertToCurrency","pre_label","toUpperCase","ns","toLowerCase","toLocaleString","languages","amount","currencyCode","rows"],"sources":["C:/Users/micae/OneDrive/Documentos/CoinFabrik/stable-protocol-interface/src/Components/Cards/AmountCard/index.jsx"],"sourcesContent":["import {Row, Col, Tooltip, Alert, Skeleton} from 'antd';\r\nimport { InfoCircleOutlined } from '@ant-design/icons';\r\nimport _ from 'lodash/core';\r\nimport React, { Fragment, useEffect, useState } from 'react';\r\nimport { useContext } from 'react';\r\nimport { AuthenticateContext } from '../../../Context/Auth';\r\nimport { LargeNumber } from '../../LargeNumber';\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { set_doc_usd } from \"../../../Helpers/helper\";\r\nimport { getPriceFields } from '../../../Lib/price';\r\nimport BalanceItem from '../../BalanceItem/BalanceItem';\r\nimport InformationModal from '../../Modals/InformationModal';\r\nimport { formatLocalMap2 } from '../../../Lib/Formats';\r\nimport './style.scss';\r\nconst BigNumber = require('bignumber.js');\r\n\r\nexport default function AmountCard(props) {\r\n    const [t, i18n] = useTranslation([\"global\", 'moc']);\r\n    const auth = useContext(AuthenticateContext);\r\n    const { convertToken } = auth;\r\n    const [loading, setLoading] = useState(true);\r\n    const [show, setShow] = useState('');\r\n    const timeSke= 2500\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => setLoading(false), timeSke)\r\n    },[auth.userBalanceData]);\r\n    if (!auth) return null;\r\n    const {\r\n        tokenName = '',\r\n        color = '',\r\n        titleName = '' } = props;\r\n\r\n    const getBalance = () => {\r\n        if (auth.userBalanceData) {\r\n            switch (tokenName) {\r\n                case 'STABLE':\r\n                    return auth.userBalanceData['docBalance'];\r\n                case 'RISKPRO':\r\n                    return auth.userBalanceData['bproBalance'];\r\n                case 'RISKPROX':\r\n                    return auth.userBalanceData['bprox2Balance'];\r\n            }\r\n        } else {\r\n            switch (tokenName) {\r\n                case 'stable':\r\n                    return (0).toFixed(2)\r\n                case 'riskpro':\r\n                    return (0).toFixed(6)\r\n                case 'riskprox':\r\n                    return (0).toFixed(6)\r\n            }\r\n        }\r\n    };\r\n    const getBalanceUSD = () => {\r\n        if (auth.userBalanceData) {\r\n            switch (tokenName) {\r\n                case 'STABLE':\r\n                    return Number(auth.userBalanceData['docBalance']).toFixed(2);\r\n                case 'RISKPRO':\r\n                    return auth.contractStatusData[\"bproPriceInUsd\"];\r\n                case 'RISKPROX':\r\n                    return new BigNumber(auth.contractStatusData['bitcoinPrice'] * auth.userBalanceData['bprox2Balance']).toFixed(4);\r\n            }\r\n        }\r\n        else {\r\n            return (0).toFixed(2)\r\n        }\r\n    };\r\n    const convertTo = convertToCurrency => convertToken(tokenName, convertToCurrency, getBalance());\r\n    // const converToUSD = convertToCurrency => ConvertToken(tokenName, convertToCurrency, getBalanceUSD());\r\n\r\n    const pre_label = t(`MoC.Tokens_${tokenName.toUpperCase()}_name`, { ns: 'moc' })\r\n\r\n    // setInterval(() => {\r\n    //   console.log('Interval triggered');\r\n    //   setShow(<LargeNumber {...{ amount: getBalance(), currencyCode: tokenName }} />)\r\n    //   console.log('Interval triggered');\r\n    // }, 10000);\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"Card CardAmount\">\r\n                {!loading ? <>\r\n                <Row>\r\n                    <Col span={22}>\r\n                        <h3 className=\"CardTitle\">{t(\"global.TokenSummary_Amount\", { ns: 'global', tokenName: pre_label })}</h3>\r\n                    </Col>\r\n                    <Col span={2}>\r\n                        <InformationModal currencyCode={tokenName} />\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        <img\r\n                            width={56}\r\n                            src={`Moc/icon-${tokenName.toLowerCase()}.svg`}\r\n                            alt=\"icon-wallet\"\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                <Row className=\"tokenAndBalance\">\r\n                    <div className=\"priceContainer\">\r\n                        <Tooltip title={Number(getBalance())?.toLocaleString(formatLocalMap2[i18n.languages[0]])}>\r\n                            <div>\r\n                            <LargeNumber {...{ amount: getBalance(), currencyCode: tokenName }} />\r\n                            </div>\r\n                        </Tooltip>\r\n                        <div className=\"WalletCurrencyPrice\">\r\n                            <BalanceItem\r\n                                amount={convertTo('RESERVE')}\r\n                                currencyCode=\"RESERVE\" />\r\n                            <BalanceItem\r\n                                amount={convertTo('USD')}\r\n                                currencyCode=\"USD\" />\r\n                        </div>\r\n                    </div>\r\n\r\n                </Row></>:\r\n                    <Skeleton active={true}  paragraph={{ rows: 4 }}></Skeleton>\r\n                }\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}