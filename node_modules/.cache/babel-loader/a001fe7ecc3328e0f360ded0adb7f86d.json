{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\micae\\\\OneDrive\\\\Documentos\\\\CoinFabrik\\\\stable-protocol-interface\\\\src\\\\Context\\\\Auth.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useEffect, useState } from 'react';\nimport getRLogin from '../Lib/rLogin';\nimport Web3 from 'web3';\nimport _ from 'lodash/core';\nimport addressHelper from '../Lib/addressHelper';\nimport FastBtcSocketWrapper from '../Lib/FastBtcSocketWrapper';\nimport { getPriceFields } from '../Lib/price';\nimport { config } from '../Config/config';\nimport { readContracts } from '../Lib/integration/contracts';\nimport { contractStatus, userBalance } from '../Lib/integration/multicall';\nimport { mintStable, redeemStable, mintRiskPro, redeemRiskPro, mintRiskProx, redeemRiskProx } from '../Lib/integration/interfaces-coinbase';\nimport { AllowanceUseReserveToken } from '../Lib/integration/interfaces-rrc20';\nimport { decodeEvents } from '../Lib/integration/transaction';\nimport { transferStableTo, transferRiskProTo, transferMocTo, calcMintInterest, approveMoCTokenCommission } from '../Lib/integration/interfaces-base';\nimport { stackedBalance, lockedBalance, pendingWithdrawals, stakingDeposit, unStake, delayMachineWithdraw, delayMachineCancelWithdraw, approveMoCTokenStaking } from '../Lib/integration/interfaces-omoc';\nimport { getGasPrice } from '../Lib/integration/utils'; //import createNodeManager from '../Lib/nodeManagerFactory';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BigNumber = require('bignumber.js');\n\nconst helper = addressHelper(Web3);\nBigNumber.config({\n  ROUNDING_MODE: BigNumber.ROUND_DOWN\n});\nconst AuthenticateContext = /*#__PURE__*/createContext({\n  isLoggedIn: false,\n  account: null,\n  userBalanceData: null,\n  contractStatusData: null,\n  web3: null,\n  connect: () => {},\n  interfaceExchangeMethod: async (sourceCurrency, targetCurrency, amount, slippage, onTransaction, onReceipt) => {},\n  interfaceMintRiskPro: async (amount, slippage, onTransaction, onReceipt) => {},\n  interfaceRedeemRiskPro: async (amount, slippage, onTransaction, onReceipt) => {},\n  interfaceMintStable: async (amount, slippage, onTransaction, onReceipt) => {},\n  interfaceRedeemStable: async (amount, slippage, onTransaction, onReceipt) => {},\n  interfaceMintRiskProx: async (amount, slippage, onTransaction, onReceipt) => {},\n  interfaceRedeemRiskProx: async (amount, slippage, onTransaction, onReceipt) => {},\n  interfaceApproveMoCTokenCommission: async (enabled, onTransaction, onReceipt) => {},\n  disconnect: () => {},\n  getTransactionReceipt: hash => {},\n  interfaceDecodeEvents: async receipt => {},\n  interfaceStackedBalance: async address => {},\n  interfaceLockedBalance: async address => {},\n  interfaceStakingDeposit: async (mocs, address) => {},\n  interfaceUnStake: async mocs => {},\n  interfaceApproveMoCTokenStaking: async enabled => {},\n  interfaceDelayMachineWithdraw: async id => {},\n  interfaceDelayMachineCancelWithdraw: async id => {},\n  interfacePendingWithdrawals: async address => {},\n  interfaceTransferStableTo: async (to, amount) => {},\n  interfaceTransferRiskProTo: async (to, amount) => {},\n  interfaceTransferMocTo: async (to, amount) => {},\n  interfaceCalcMintInterestValues: async amount => {},\n  interfaceApproveReserve: async address => {},\n  convertToken: async (from, to, amount) => {},\n  getSpendableBalance: async address => {},\n  loadContractsStatusAndUserBalance: async address => {}\n});\n\nconst AuthenticateProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [contractStatusData, setContractStatusData] = useState(null);\n  const [provider, setProvider] = useState(null);\n  const [web3, setweb3] = useState(null);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [account, setAccount] = useState(null);\n  const [userBalanceData, setUserBalanceData] = useState(null);\n  const [accountData, setAccountData] = useState({\n    Wallet: '',\n    Owner: '',\n    Balance: 0,\n    BPROBalance: 0,\n    BTCxBalance: 0,\n    GasPrice: 0,\n    truncatedAddress: ''\n  }); // const [transactionReceipt, setTransactionReceipt] = useState(null);\n  // Fast BTC socket\n\n  const socket = new FastBtcSocketWrapper();\n  useEffect(() => {\n    if (!window.rLogin) {\n      window.rLogin = getRLogin();\n\n      if (window.rLogin.cachedProvider) {\n        connect();\n      }\n    }\n  });\n  useEffect(() => {\n    if (account) {\n      initContractsConnection();\n      loadAccountData();\n    }\n  }, [account]);\n\n  const connect = () => window.rLogin.connect().then(rLoginResponse => {\n    const {\n      provider,\n      disconnect\n    } = rLoginResponse;\n    setProvider(provider);\n    const web3 = new Web3(provider);\n    setweb3(web3);\n    window.web3 = web3;\n    window.rLoginDisconnect = disconnect;\n    window.nodeManager = {}; // request user's account\n\n    provider.request({\n      method: 'eth_accounts'\n    }).then(_ref2 => {\n      let [account] = _ref2;\n      setAccount(account);\n      setIsLoggedIn(true);\n    });\n  });\n\n  const disconnect = async () => {\n    await disconnect;\n    setProvider(null);\n    setAccount(null);\n    setAccountData({\n      Wallet: '',\n      Owner: '',\n      Balance: 0,\n      GasPrice: 0,\n      truncatedAddress: ''\n    });\n    setIsLoggedIn(false);\n    await window.rLoginDisconnect();\n  };\n\n  const buildInterfaceContext = () => {\n    return {\n      web3,\n      contractStatusData,\n      userBalanceData,\n      config,\n      account,\n      vendorAddress: config.vendor\n    };\n  };\n\n  const interfaceExchangeMethod = async (sourceCurrency, targetCurrency, amount, slippage, onTransaction, onReceipt) => {\n    const appMode = config.environment.AppMode;\n    const appModeString = `APP_MODE_${appMode}`;\n    const exchangeCurrencyMap = {\n      RISKPROX: {\n        RESERVE: {\n          APP_MODE_MoC: {\n            exchangeFunction: interfaceRedeemRiskProx\n          },\n          APP_MODE_RRC20: {\n            exchangeFunction: null\n          }\n        }\n      },\n      RISKPRO: {\n        RESERVE: {\n          APP_MODE_MoC: {\n            exchangeFunction: interfaceRedeemRiskPro\n          },\n          APP_MODE_RRC20: {\n            exchangeFunction: null\n          }\n        }\n      },\n      STABLE: {\n        RESERVE: {\n          APP_MODE_MoC: {\n            exchangeFunction: interfaceRedeemStable\n          },\n          APP_MODE_RRC20: {\n            exchangeFunction: null\n          }\n        }\n      },\n      RESERVE: {\n        RISKPRO: {\n          APP_MODE_MoC: {\n            exchangeFunction: interfaceMintRiskPro\n          },\n          APP_MODE_RRC20: {\n            exchangeFunction: null\n          }\n        },\n        STABLE: {\n          APP_MODE_MoC: {\n            exchangeFunction: interfaceMintStable\n          },\n          APP_MODE_RRC20: {\n            exchangeFunction: null\n          }\n        },\n        RISKPROX: {\n          APP_MODE_MoC: {\n            exchangeFunction: interfaceMintRiskProx\n          },\n          APP_MODE_RRC20: {\n            exchangeFunction: null\n          }\n        }\n      }\n    };\n    const exchangeMethod = exchangeCurrencyMap[sourceCurrency][targetCurrency][appModeString].exchangeFunction;\n    return exchangeMethod(amount, slippage, onTransaction, onReceipt);\n  };\n\n  const interfaceMintStable = async (amount, slippage, onTransaction, onReceipt) => {\n    const interfaceContext = buildInterfaceContext();\n    await mintStable(interfaceContext, amount, slippage, onTransaction, onReceipt);\n  };\n\n  const interfaceRedeemStable = async (amount, slippage, onTransaction, onReceipt) => {\n    const interfaceContext = buildInterfaceContext();\n    await redeemStable(interfaceContext, amount, slippage, onTransaction, onReceipt);\n  };\n\n  const interfaceMintRiskPro = async (amount, slippage, onTransaction, onReceipt) => {\n    const interfaceContext = buildInterfaceContext();\n    await mintRiskPro(interfaceContext, amount, slippage, onTransaction, onReceipt);\n  };\n\n  const interfaceRedeemRiskPro = async (amount, slippage, onTransaction, onReceipt) => {\n    const interfaceContext = buildInterfaceContext();\n    await redeemRiskPro(interfaceContext, amount, slippage, onTransaction, onReceipt);\n  };\n\n  const interfaceMintRiskProx = async (amount, slippage, onTransaction, onReceipt) => {\n    const interfaceContext = buildInterfaceContext();\n    await mintRiskProx(interfaceContext, amount, slippage, onTransaction, onReceipt);\n  };\n\n  const interfaceRedeemRiskProx = async (amount, slippage, onTransaction, onReceipt) => {\n    const interfaceContext = buildInterfaceContext();\n    await redeemRiskProx(interfaceContext, amount, slippage, onTransaction, onReceipt);\n  };\n\n  const interfaceApproveMoCTokenCommission = async (enabled, onTransaction, onReceipt) => {\n    const interfaceContext = buildInterfaceContext();\n    return approveMoCTokenCommission(interfaceContext, enabled, onTransaction, onReceipt);\n  };\n\n  const initContractsConnection = async () => {\n    window.integration = await readContracts(web3, config.environment);\n    await loadContractsStatusAndUserBalance();\n  };\n\n  const loadContractsStatusAndUserBalance = async () => {\n    const appMode = config.environment.AppMode; // Read info from different contract MoCState.sol MoCInrate.sol MoCSettlement.sol MoC.sol\n    // in one call throught Multicall\n\n    const dataContractStatus = await contractStatus(web3, window.integration, appMode);\n    const accountBalance = await userBalance(web3, window.integration, account, appMode);\n    setContractStatusData(dataContractStatus);\n    setUserBalanceData(accountBalance);\n    const contracts = {\n      bproToken: window.integration.contracts.riskprotoken,\n      docToken: window.integration.contracts.stabletoken,\n      mocState: window.integration.contracts.mocstate,\n      mocInrate: window.integration.contracts.mocinrate,\n      mocExchange: window.integration.contracts.mocexchange,\n      mocSettlement: window.integration.contracts.mocsettlement,\n      moc: window.integration.contracts.moc,\n      mocToken: window.integration.contracts.moctoken\n    };\n    window.appMode = 'MoC';\n  };\n\n  const loadAccountData = async () => {\n    const owner = await getAccount();\n    const truncate_address = owner.substring(0, 6) + '...' + owner.substring(owner.length - 4, owner.length);\n    const accountData = {\n      Wallet: account,\n      Owner: owner,\n      Balance: await getBalance(account),\n      GasPrice: await interfaceGasPrice(),\n      truncatedAddress: truncate_address\n    };\n    window.address = owner;\n    setAccountData(accountData);\n  };\n\n  const getAccount = async () => {\n    const [owner] = await web3.eth.getAccounts();\n    return owner;\n  };\n\n  const getBalance = async address => {\n    try {\n      let balance = await web3.eth.getBalance(address);\n      balance = web3.utils.fromWei(balance);\n      return balance;\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const getMoCAllowance = async address => {\n    const from = address || account;\n    const dContracts = window.integration;\n    const moctoken = dContracts.contracts.moctoken;\n    const moc = dContracts.contracts.moc;\n    return moctoken.methods.allowance(from, moc._address).call();\n  };\n\n  const getMoCBalance = async address => {\n    const from = address || account;\n    const dContracts = window.integration;\n    const moctoken = dContracts.contracts.moctoken;\n    return moctoken.methods.balanceOf(from).call();\n  };\n\n  const getSpendableBalance = async address => {\n    const from = address || account;\n    return await web3.eth.getBalance(from);\n  };\n\n  const getReserveAllowance = async address => {\n    const from = address || account;\n    return await web3.eth.getBalance(from);\n  };\n\n  const getTransactionReceipt = async (hash, callback) => {\n    //const web3 = new Web3(provider);\n    let transactionReceipt = false;\n    let transaction = await web3.eth.getTransactionReceipt(hash);\n\n    if (transaction) {\n      transactionReceipt = true;\n    }\n\n    return transactionReceipt;\n  };\n\n  const toCheckSumAddress = address => helper.toCheckSumAddress(address);\n\n  const isCheckSumAddress = address => {\n    if (address === undefined) return false;\n    return helper.isValidAddressChecksum(address);\n  };\n\n  const interfaceGasPrice = async () => {\n    return getGasPrice(web3);\n  };\n\n  const interfaceDecodeEvents = async receipt => {\n    const txRcp = await web3.eth.getTransactionReceipt(receipt.transactionHash);\n    const filteredEvents = decodeEvents(txRcp);\n    return filteredEvents;\n  };\n\n  const interfaceStackedBalance = async address => {\n    const from = address || account;\n    return stackedBalance(from);\n  };\n\n  const interfaceLockedBalance = async address => {\n    const from = address || account;\n    return lockedBalance(from);\n  };\n\n  const interfacePendingWithdrawals = async address => {\n    const from = address || account;\n    return pendingWithdrawals(from);\n  };\n\n  const interfaceStakingDeposit = async (mocs, address, callback) => {\n    const from = address || account;\n    const interfaceContext = buildInterfaceContext();\n    return stakingDeposit(interfaceContext, mocs, address, callback);\n  };\n\n  const interfaceUnStake = async (mocs, callback) => {\n    const interfaceContext = buildInterfaceContext();\n    return unStake(interfaceContext, mocs, callback);\n  };\n\n  const interfaceDelayMachineWithdraw = async function (id) {\n    let callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : () => {};\n    const interfaceContext = buildInterfaceContext();\n    return delayMachineWithdraw(interfaceContext, id, callback);\n  };\n\n  const interfaceDelayMachineCancelWithdraw = async (id, callback) => {\n    const interfaceContext = buildInterfaceContext();\n    return delayMachineCancelWithdraw(interfaceContext, id, callback);\n  };\n\n  const interfaceApproveMoCTokenStaking = async function (enabled) {\n    let callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : () => {};\n    const interfaceContext = buildInterfaceContext();\n    return approveMoCTokenStaking(interfaceContext, enabled, callback);\n  };\n\n  const interfaceTransferStableTo = async (to, amount, onTransaction, onReceipt) => {\n    const interfaceContext = buildInterfaceContext();\n    const toWithChecksum = helper.toWeb3CheckSumAddress(to);\n    return transferStableTo(interfaceContext, toWithChecksum, amount, onTransaction, onReceipt);\n  };\n\n  const interfaceTransferRiskProTo = async (to, amount, onTransaction, onReceipt) => {\n    const interfaceContext = buildInterfaceContext();\n    const toWithChecksum = helper.toWeb3CheckSumAddress(to);\n    return transferRiskProTo(interfaceContext, toWithChecksum, amount, onTransaction, onReceipt);\n  };\n\n  const interfaceTransferMocTo = async (to, amount, onTransaction, onReceipt) => {\n    const interfaceContext = buildInterfaceContext();\n    const toWithChecksum = helper.toWeb3CheckSumAddress(to);\n    return transferMocTo(interfaceContext, toWithChecksum, amount, onTransaction, onReceipt);\n  };\n\n  const interfaceCalcMintInterestValues = async amount => {\n    const interfaceContext = buildInterfaceContext();\n    const mintInterest = await calcMintInterest(interfaceContext, amount);\n    const formattedValue = new BigNumber(Web3.utils.fromWei(mintInterest));\n    return formattedValue;\n  };\n\n  const interfaceApproveReserve = (address, callback) => {\n    const interfaceContext = buildInterfaceContext();\n    AllowanceUseReserveToken(interfaceContext, true, callback);\n  };\n\n  const convertToken = (from, to, amount) => {\n    if (!contractStatusData) return '';\n    const {\n      bitcoinPrice,\n      bproPriceInUsd,\n      bproPriceInRbtc,\n      reservePrecision,\n      bprox2PriceInRbtc,\n      bprox2PriceInBpro,\n      mocPrice\n    } = contractStatusData;\n\n    const convertDocToUsd = amount => amount;\n\n    const convertBproToRbtc = amount => amount.times(bproPriceInRbtc).div(reservePrecision);\n\n    const convertBproToUsd = amount => amount.times(bproPriceInUsd).div(reservePrecision);\n\n    const convertDocToRbtc = amount => amount.div(bitcoinPrice).times(reservePrecision);\n\n    const convertRbtcToUsd = amount => amount.times(bitcoinPrice).div(reservePrecision);\n\n    const convertRbtcToBpro = amount => amount.div(bproPriceInRbtc).times(reservePrecision);\n\n    const convertRbtcToDoc = amount => convertRbtcToUsd(amount);\n\n    const convertRbtcToBprox2 = amount => amount.div(bprox2PriceInRbtc).times(reservePrecision);\n\n    const convertBprox2ToRbtc = amount => amount.times(bprox2PriceInRbtc).div(reservePrecision);\n\n    const convertBproToBprox2 = amount => amount.div(bprox2PriceInBpro).times(reservePrecision);\n\n    const convertBprox2ToBpro = amount => amount.times(bprox2PriceInBpro).div(reservePrecision);\n\n    const convertBprox2ToUsd = amount => amount // RESERVE\n    .times(bprox2PriceInRbtc) // RESERVE * RESERVE\n    .div(reservePrecision) // RESERVE\n    .times(bitcoinPrice) // RESERVE * USD\n    .div(reservePrecision); // USD\n\n\n    const convertMoCTokenToRbtc = amount => convertDocToRbtc(convertMoCTokenToUsd(amount));\n\n    const convertMoCTokenToUsd = amount => amount.times(mocPrice).div(reservePrecision);\n\n    const convertRbtcToMoCToken = amount => convertRbtcToDoc(amount).div(mocPrice).times(reservePrecision);\n\n    const convertMap = {\n      STABLE: {\n        USD: convertDocToUsd,\n        RESERVE: convertDocToRbtc\n      },\n      RISKPRO: {\n        USD: convertBproToUsd,\n        RESERVE: convertBproToRbtc,\n        RISKPROX: convertBproToBprox2\n      },\n      RISKPROX: {\n        RESERVE: convertBprox2ToRbtc,\n        RISKPRO: convertBprox2ToBpro,\n        USD: convertBprox2ToUsd\n      },\n      MOC: {\n        RESERVE: convertMoCTokenToRbtc,\n        USD: convertMoCTokenToUsd\n      },\n      RESERVE: {\n        USD: convertRbtcToUsd,\n        RISKPRO: convertRbtcToBpro,\n        STABLE: convertRbtcToDoc,\n        RISKPROX: convertRbtcToBprox2,\n        MOC: convertRbtcToMoCToken\n      }\n    };\n    return from === to ? new BigNumber(amount) : convertMap[from][to](new BigNumber(amount));\n  };\n\n  return /*#__PURE__*/_jsxDEV(AuthenticateContext.Provider, {\n    value: {\n      account,\n      accountData,\n      userBalanceData,\n      contractStatusData,\n      isLoggedIn,\n      web3,\n      connect,\n      disconnect,\n      interfaceExchangeMethod,\n      interfaceMintRiskPro,\n      interfaceRedeemRiskPro,\n      interfaceMintStable,\n      interfaceRedeemStable,\n      interfaceMintRiskProx,\n      interfaceRedeemRiskProx,\n      interfaceApproveMoCTokenCommission,\n      getTransactionReceipt,\n      interfaceStackedBalance,\n      interfaceLockedBalance,\n      interfaceStakingDeposit,\n      interfaceUnStake,\n      interfaceApproveMoCTokenStaking,\n      interfaceDelayMachineWithdraw,\n      interfaceDelayMachineCancelWithdraw,\n      interfacePendingWithdrawals,\n      interfaceTransferStableTo,\n      interfaceTransferRiskProTo,\n      interfaceTransferMocTo,\n      interfaceCalcMintInterestValues,\n      interfaceApproveReserve,\n      socket,\n      convertToken,\n      getSpendableBalance,\n      interfaceDecodeEvents,\n      loadContractsStatusAndUserBalance\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 525,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AuthenticateProvider, \"Li4Y6j8WhFK7wBaLEoFmDl7qgw8=\");\n\n_c = AuthenticateProvider;\nexport { AuthenticateContext, AuthenticateProvider };\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthenticateProvider\");","map":{"version":3,"names":["createContext","useEffect","useState","getRLogin","Web3","_","addressHelper","FastBtcSocketWrapper","getPriceFields","config","readContracts","contractStatus","userBalance","mintStable","redeemStable","mintRiskPro","redeemRiskPro","mintRiskProx","redeemRiskProx","AllowanceUseReserveToken","decodeEvents","transferStableTo","transferRiskProTo","transferMocTo","calcMintInterest","approveMoCTokenCommission","stackedBalance","lockedBalance","pendingWithdrawals","stakingDeposit","unStake","delayMachineWithdraw","delayMachineCancelWithdraw","approveMoCTokenStaking","getGasPrice","BigNumber","require","helper","ROUNDING_MODE","ROUND_DOWN","AuthenticateContext","isLoggedIn","account","userBalanceData","contractStatusData","web3","connect","interfaceExchangeMethod","sourceCurrency","targetCurrency","amount","slippage","onTransaction","onReceipt","interfaceMintRiskPro","interfaceRedeemRiskPro","interfaceMintStable","interfaceRedeemStable","interfaceMintRiskProx","interfaceRedeemRiskProx","interfaceApproveMoCTokenCommission","enabled","disconnect","getTransactionReceipt","hash","interfaceDecodeEvents","receipt","interfaceStackedBalance","address","interfaceLockedBalance","interfaceStakingDeposit","mocs","interfaceUnStake","interfaceApproveMoCTokenStaking","interfaceDelayMachineWithdraw","id","interfaceDelayMachineCancelWithdraw","interfacePendingWithdrawals","interfaceTransferStableTo","to","interfaceTransferRiskProTo","interfaceTransferMocTo","interfaceCalcMintInterestValues","interfaceApproveReserve","convertToken","from","getSpendableBalance","loadContractsStatusAndUserBalance","AuthenticateProvider","children","setContractStatusData","provider","setProvider","setweb3","setIsLoggedIn","setAccount","setUserBalanceData","accountData","setAccountData","Wallet","Owner","Balance","BPROBalance","BTCxBalance","GasPrice","truncatedAddress","socket","window","rLogin","cachedProvider","initContractsConnection","loadAccountData","then","rLoginResponse","rLoginDisconnect","nodeManager","request","method","buildInterfaceContext","vendorAddress","vendor","appMode","environment","AppMode","appModeString","exchangeCurrencyMap","RISKPROX","RESERVE","APP_MODE_MoC","exchangeFunction","APP_MODE_RRC20","RISKPRO","STABLE","exchangeMethod","interfaceContext","integration","dataContractStatus","accountBalance","contracts","bproToken","riskprotoken","docToken","stabletoken","mocState","mocstate","mocInrate","mocinrate","mocExchange","mocexchange","mocSettlement","mocsettlement","moc","mocToken","moctoken","owner","getAccount","truncate_address","substring","length","getBalance","interfaceGasPrice","eth","getAccounts","balance","utils","fromWei","e","console","log","getMoCAllowance","dContracts","methods","allowance","_address","call","getMoCBalance","balanceOf","getReserveAllowance","callback","transactionReceipt","transaction","toCheckSumAddress","isCheckSumAddress","undefined","isValidAddressChecksum","txRcp","transactionHash","filteredEvents","toWithChecksum","toWeb3CheckSumAddress","mintInterest","formattedValue","bitcoinPrice","bproPriceInUsd","bproPriceInRbtc","reservePrecision","bprox2PriceInRbtc","bprox2PriceInBpro","mocPrice","convertDocToUsd","convertBproToRbtc","times","div","convertBproToUsd","convertDocToRbtc","convertRbtcToUsd","convertRbtcToBpro","convertRbtcToDoc","convertRbtcToBprox2","convertBprox2ToRbtc","convertBproToBprox2","convertBprox2ToBpro","convertBprox2ToUsd","convertMoCTokenToRbtc","convertMoCTokenToUsd","convertRbtcToMoCToken","convertMap","USD","MOC"],"sources":["C:/Users/micae/OneDrive/Documentos/CoinFabrik/stable-protocol-interface/src/Context/Auth.js"],"sourcesContent":["import { createContext, useEffect, useState } from 'react';\r\nimport getRLogin from '../Lib/rLogin';\r\nimport Web3 from 'web3';\r\nimport _ from 'lodash/core';\r\nimport addressHelper from '../Lib/addressHelper';\r\nimport FastBtcSocketWrapper from '../Lib/FastBtcSocketWrapper';\r\nimport { getPriceFields } from '../Lib/price';\r\nimport { config } from '../Config/config';\r\n\r\nimport { readContracts } from '../Lib/integration/contracts';\r\nimport { contractStatus, userBalance } from '../Lib/integration/multicall';\r\nimport { mintStable, redeemStable, mintRiskPro, redeemRiskPro, mintRiskProx, redeemRiskProx } from '../Lib/integration/interfaces-coinbase';\r\nimport { AllowanceUseReserveToken } from '../Lib/integration/interfaces-rrc20';\r\nimport { decodeEvents } from '../Lib/integration/transaction';\r\n\r\nimport { transferStableTo, transferRiskProTo, transferMocTo, calcMintInterest, approveMoCTokenCommission } from '../Lib/integration/interfaces-base';\r\nimport { stackedBalance, lockedBalance, pendingWithdrawals, stakingDeposit, unStake, delayMachineWithdraw, delayMachineCancelWithdraw, approveMoCTokenStaking } from '../Lib/integration/interfaces-omoc';\r\nimport { getGasPrice } from '../Lib/integration/utils';\r\n\r\n//import createNodeManager from '../Lib/nodeManagerFactory';\r\n\r\nconst BigNumber = require('bignumber.js');\r\nconst helper = addressHelper(Web3);\r\n\r\nBigNumber.config({ ROUNDING_MODE: BigNumber.ROUND_DOWN });\r\n\r\nconst AuthenticateContext = createContext({\r\n    isLoggedIn: false,\r\n    account: null,\r\n    userBalanceData: null,\r\n    contractStatusData: null,\r\n    web3: null,\r\n    connect: () => {},\r\n    interfaceExchangeMethod: async (sourceCurrency, targetCurrency, amount, slippage, onTransaction, onReceipt) => {},\r\n    interfaceMintRiskPro: async (amount, slippage, onTransaction, onReceipt) => {},\r\n    interfaceRedeemRiskPro: async (amount, slippage, onTransaction, onReceipt) => {},\r\n    interfaceMintStable: async (amount, slippage, onTransaction, onReceipt) => {},\r\n    interfaceRedeemStable: async (amount, slippage, onTransaction, onReceipt) => {},\r\n    interfaceMintRiskProx: async (amount, slippage, onTransaction, onReceipt) => {},\r\n    interfaceRedeemRiskProx: async (amount, slippage, onTransaction, onReceipt) => {},\r\n    interfaceApproveMoCTokenCommission: async (enabled, onTransaction, onReceipt) => {},\r\n    disconnect: () => {},\r\n    getTransactionReceipt: (hash) => {},\r\n    interfaceDecodeEvents: async (receipt) => {},\r\n    interfaceStackedBalance: async (address) => {},\r\n    interfaceLockedBalance: async (address) => {},\r\n    interfaceStakingDeposit: async (mocs, address) => {},\r\n    interfaceUnStake: async (mocs) => {},\r\n    interfaceApproveMoCTokenStaking: async (enabled) => {},\r\n    interfaceDelayMachineWithdraw: async (id) => {},\r\n    interfaceDelayMachineCancelWithdraw: async (id) => {},\r\n    interfacePendingWithdrawals: async (address) => {},\r\n    interfaceTransferStableTo: async (to, amount) => {},\r\n    interfaceTransferRiskProTo: async (to, amount) => {},\r\n    interfaceTransferMocTo: async (to, amount) => {},\r\n    interfaceCalcMintInterestValues: async (amount) => {},\r\n    interfaceApproveReserve: async (address) => {},\r\n    convertToken: async (from, to, amount) => {},\r\n    getSpendableBalance: async (address) => {},\r\n    loadContractsStatusAndUserBalance: async (address) => {}\r\n});\r\n\r\nconst AuthenticateProvider = ({ children }) => {\r\n    const [contractStatusData, setContractStatusData] = useState(null);\r\n    const [provider, setProvider] = useState(null);\r\n    const [web3, setweb3] = useState(null);\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n    const [account, setAccount] = useState(null);\r\n    const [userBalanceData, setUserBalanceData] = useState(null);\r\n    const [accountData, setAccountData] = useState({\r\n        Wallet: '',\r\n        Owner: '',\r\n        Balance: 0,\r\n        BPROBalance: 0,\r\n        BTCxBalance: 0,\r\n        GasPrice: 0,\r\n        truncatedAddress: ''\r\n    });\r\n    // const [transactionReceipt, setTransactionReceipt] = useState(null);\r\n\r\n    // Fast BTC socket\r\n    const socket = new FastBtcSocketWrapper();\r\n\r\n    useEffect(() => {\r\n        if (!window.rLogin) {\r\n            window.rLogin = getRLogin();\r\n\r\n            if (window.rLogin.cachedProvider) {\r\n                connect();\r\n            }\r\n        }\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (account) {\r\n            initContractsConnection();\r\n            loadAccountData();\r\n        }\r\n    }, [account]);\r\n\r\n    const connect = () =>\r\n        window.rLogin.connect().then((rLoginResponse) => {\r\n            const { provider, disconnect } = rLoginResponse;\r\n            setProvider(provider);\r\n\r\n            const web3 = new Web3(provider);\r\n            setweb3(web3);\r\n            window.web3 = web3;\r\n            window.rLoginDisconnect = disconnect;\r\n            window.nodeManager = {};\r\n\r\n            // request user's account\r\n            provider.request({ method: 'eth_accounts' }).then(([account]) => {\r\n                setAccount(account);\r\n                setIsLoggedIn(true);\r\n            });\r\n\r\n        });\r\n\r\n    const disconnect = async () => {\r\n        await disconnect;\r\n        setProvider(null);\r\n        setAccount(null);\r\n        setAccountData({\r\n            Wallet: '',\r\n            Owner: '',\r\n            Balance: 0,\r\n            GasPrice: 0,\r\n            truncatedAddress: ''\r\n        });\r\n        setIsLoggedIn(false);\r\n        await window.rLoginDisconnect();\r\n    };\r\n\r\n    const buildInterfaceContext = () => {\r\n        return {\r\n            web3,\r\n            contractStatusData,\r\n            userBalanceData,\r\n            config,\r\n            account,\r\n            vendorAddress: config.vendor\r\n        }\r\n\r\n    }\r\n\r\n    const interfaceExchangeMethod = async (sourceCurrency, targetCurrency, amount, slippage, onTransaction, onReceipt) => {\r\n        const appMode = config.environment.AppMode;\r\n        const appModeString = `APP_MODE_${appMode}`;\r\n\r\n        const exchangeCurrencyMap = {\r\n            RISKPROX: {\r\n                RESERVE: {\r\n                    APP_MODE_MoC: {\r\n                        exchangeFunction: interfaceRedeemRiskProx\r\n                    },\r\n                    APP_MODE_RRC20: {\r\n                        exchangeFunction: null\r\n                    }\r\n                }\r\n            },\r\n            RISKPRO: {\r\n                RESERVE: {\r\n                    APP_MODE_MoC: {\r\n                        exchangeFunction: interfaceRedeemRiskPro\r\n                    },\r\n                    APP_MODE_RRC20: {\r\n                        exchangeFunction: null\r\n                    }\r\n                }\r\n            },\r\n            STABLE: {\r\n                RESERVE: {\r\n                    APP_MODE_MoC: {\r\n                        exchangeFunction: interfaceRedeemStable\r\n                    },\r\n                    APP_MODE_RRC20: {\r\n                        exchangeFunction: null\r\n                    }\r\n                }\r\n            },\r\n            RESERVE: {\r\n                RISKPRO: {\r\n                    APP_MODE_MoC: {\r\n                        exchangeFunction: interfaceMintRiskPro\r\n                    },\r\n                    APP_MODE_RRC20: {\r\n                        exchangeFunction: null\r\n                    }\r\n                },\r\n                STABLE: {\r\n                    APP_MODE_MoC: {\r\n                        exchangeFunction: interfaceMintStable\r\n                    },\r\n                    APP_MODE_RRC20: {\r\n                        exchangeFunction: null\r\n                    }\r\n                },\r\n                RISKPROX: {\r\n                    APP_MODE_MoC: {\r\n                        exchangeFunction: interfaceMintRiskProx\r\n                    },\r\n                    APP_MODE_RRC20: {\r\n                        exchangeFunction: null\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n        const exchangeMethod = exchangeCurrencyMap[sourceCurrency][targetCurrency][appModeString].exchangeFunction;\r\n        return exchangeMethod(amount, slippage, onTransaction, onReceipt);\r\n\r\n    }\r\n\r\n    const interfaceMintStable = async (amount, slippage, onTransaction, onReceipt) => {\r\n        const interfaceContext = buildInterfaceContext();\r\n        await mintStable(interfaceContext, amount, slippage, onTransaction, onReceipt);\r\n    }\r\n\r\n    const interfaceRedeemStable = async (amount, slippage, onTransaction, onReceipt) => {\r\n        const interfaceContext = buildInterfaceContext();\r\n        await redeemStable(interfaceContext, amount, slippage, onTransaction, onReceipt);\r\n    }\r\n\r\n    const interfaceMintRiskPro = async (amount, slippage, onTransaction, onReceipt) => {\r\n        const interfaceContext = buildInterfaceContext();\r\n        await mintRiskPro(interfaceContext, amount, slippage, onTransaction, onReceipt);\r\n    }\r\n\r\n    const interfaceRedeemRiskPro = async (amount, slippage, onTransaction, onReceipt) => {\r\n        const interfaceContext = buildInterfaceContext();\r\n        await redeemRiskPro(interfaceContext, amount, slippage, onTransaction, onReceipt);\r\n    }\r\n\r\n    const interfaceMintRiskProx = async (amount, slippage, onTransaction, onReceipt) => {\r\n        const interfaceContext = buildInterfaceContext();\r\n        await mintRiskProx(interfaceContext, amount, slippage, onTransaction, onReceipt);\r\n    }\r\n\r\n    const interfaceRedeemRiskProx = async (amount, slippage, onTransaction, onReceipt) => {\r\n        const interfaceContext = buildInterfaceContext();\r\n        await redeemRiskProx(interfaceContext, amount, slippage, onTransaction, onReceipt);\r\n    }\r\n\r\n    const interfaceApproveMoCTokenCommission = async (enabled, onTransaction, onReceipt) => {\r\n        const interfaceContext = buildInterfaceContext();\r\n        return approveMoCTokenCommission(interfaceContext, enabled, onTransaction, onReceipt);\r\n    };\r\n\r\n    const initContractsConnection = async () => {\r\n        window.integration = await readContracts(web3, config.environment);\r\n        await loadContractsStatusAndUserBalance();\r\n    }\r\n\r\n    const loadContractsStatusAndUserBalance = async () => {\r\n        const appMode = config.environment.AppMode;\r\n\r\n        // Read info from different contract MoCState.sol MoCInrate.sol MoCSettlement.sol MoC.sol\r\n        // in one call throught Multicall\r\n        const dataContractStatus = await contractStatus(\r\n            web3,\r\n            window.integration,\r\n            appMode\r\n        );\r\n\r\n        const accountBalance = await userBalance(\r\n            web3,\r\n            window.integration,\r\n            account,\r\n            appMode\r\n        );\r\n\r\n        setContractStatusData(dataContractStatus);\r\n        setUserBalanceData(accountBalance);\r\n\r\n        const contracts = {\r\n            bproToken: window.integration.contracts.riskprotoken,\r\n            docToken: window.integration.contracts.stabletoken,\r\n            mocState: window.integration.contracts.mocstate,\r\n            mocInrate: window.integration.contracts.mocinrate,\r\n            mocExchange: window.integration.contracts.mocexchange,\r\n            mocSettlement: window.integration.contracts.mocsettlement,\r\n            moc: window.integration.contracts.moc,\r\n            mocToken: window.integration.contracts.moctoken\r\n        };\r\n\r\n        window.appMode = 'MoC';\r\n\r\n    }\r\n\r\n    const loadAccountData = async () => {\r\n        const owner = await getAccount();\r\n        const truncate_address =\r\n            owner.substring(0, 6) +\r\n            '...' +\r\n            owner.substring(owner.length - 4, owner.length);\r\n        const accountData = {\r\n            Wallet: account,\r\n            Owner: owner,\r\n            Balance: await getBalance(account),\r\n            GasPrice: await interfaceGasPrice(),\r\n            truncatedAddress: truncate_address\r\n        };\r\n\r\n        window.address = owner;\r\n\r\n        setAccountData(accountData);\r\n    };\r\n\r\n    const getAccount = async () => {\r\n        const [owner] = await web3.eth.getAccounts();\r\n        return owner;\r\n    };\r\n    const getBalance = async (address) => {\r\n        try {\r\n            let balance = await web3.eth.getBalance(address);\r\n            balance = web3.utils.fromWei(balance);\r\n            return balance;\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    };\r\n\r\n    const getMoCAllowance = async (address) => {\r\n        const from = address || account;\r\n        const dContracts = window.integration;\r\n        const moctoken = dContracts.contracts.moctoken;\r\n        const moc = dContracts.contracts.moc;\r\n        return moctoken.methods.allowance(from, moc._address).call();\r\n    };\r\n\r\n    const getMoCBalance = async (address) => {\r\n        const from = address || account;\r\n        const dContracts = window.integration;\r\n        const moctoken = dContracts.contracts.moctoken;\r\n        return moctoken.methods.balanceOf(from).call();\r\n    }\r\n\r\n    const getSpendableBalance = async (address) => {\r\n        const from = address || account;\r\n        return await web3.eth.getBalance(from);\r\n    }\r\n\r\n    const getReserveAllowance = async (address) => {\r\n        const from = address || account;\r\n        return await web3.eth.getBalance(from);\r\n    }\r\n\r\n    const getTransactionReceipt = async (hash, callback) => {\r\n        //const web3 = new Web3(provider);\r\n        let transactionReceipt = false;\r\n        let transaction = await web3.eth.getTransactionReceipt(hash);\r\n        if (transaction) {\r\n            transactionReceipt = true;\r\n        }\r\n        return transactionReceipt;\r\n    };\r\n\r\n    const toCheckSumAddress = address => helper.toCheckSumAddress(address);\r\n\r\n    const isCheckSumAddress = address => {\r\n        if (address === undefined) return false;\r\n        return helper.isValidAddressChecksum(address);\r\n    };\r\n\r\n    const interfaceGasPrice = async () => {\r\n        return getGasPrice(web3);\r\n    };\r\n\r\n    const interfaceDecodeEvents = async (receipt) => {\r\n        const txRcp = await web3.eth.getTransactionReceipt(receipt.transactionHash);\r\n        const filteredEvents = decodeEvents(txRcp);\r\n        return filteredEvents;\r\n    };\r\n\r\n    const interfaceStackedBalance = async (address) => {\r\n        const from = address || account;\r\n        return stackedBalance(from);\r\n    };\r\n\r\n    const interfaceLockedBalance = async (address) => {\r\n        const from = address || account;\r\n        return lockedBalance(from);\r\n    };\r\n\r\n    const interfacePendingWithdrawals = async (address) => {\r\n        const from = address || account;\r\n        return pendingWithdrawals(from);\r\n    };\r\n\r\n    const interfaceStakingDeposit = async (mocs, address, callback) => {\r\n        const from = address || account;\r\n        const interfaceContext = buildInterfaceContext();\r\n        return stakingDeposit(interfaceContext, mocs, address, callback);\r\n    };\r\n\r\n    const interfaceUnStake = async (mocs, callback) => {\r\n        const interfaceContext = buildInterfaceContext();\r\n        return unStake(interfaceContext, mocs, callback);\r\n    };\r\n\r\n    const interfaceDelayMachineWithdraw = async (id, callback = () => {}) => {\r\n        const interfaceContext = buildInterfaceContext();\r\n        return delayMachineWithdraw(interfaceContext, id, callback);\r\n    };\r\n\r\n    const interfaceDelayMachineCancelWithdraw = async (id, callback) => {\r\n        const interfaceContext = buildInterfaceContext();\r\n        return delayMachineCancelWithdraw(interfaceContext, id, callback);\r\n    };\r\n\r\n    const interfaceApproveMoCTokenStaking = async (enabled, callback = () => {}) => {\r\n        const interfaceContext = buildInterfaceContext();\r\n        return approveMoCTokenStaking(interfaceContext, enabled, callback);\r\n    };\r\n\r\n    const interfaceTransferStableTo = async (to, amount, onTransaction, onReceipt) => {\r\n        const interfaceContext = buildInterfaceContext();\r\n        const toWithChecksum = helper.toWeb3CheckSumAddress(to);\r\n        return transferStableTo(interfaceContext, toWithChecksum, amount, onTransaction, onReceipt);\r\n    };\r\n\r\n    const interfaceTransferRiskProTo = async (to, amount, onTransaction, onReceipt) => {\r\n        const interfaceContext = buildInterfaceContext();\r\n        const toWithChecksum = helper.toWeb3CheckSumAddress(to);\r\n        return transferRiskProTo(interfaceContext, toWithChecksum, amount, onTransaction, onReceipt);\r\n    };\r\n\r\n    const interfaceTransferMocTo = async (to, amount, onTransaction, onReceipt) => {\r\n        const interfaceContext = buildInterfaceContext();\r\n        const toWithChecksum = helper.toWeb3CheckSumAddress(to);\r\n        return transferMocTo(interfaceContext, toWithChecksum, amount, onTransaction, onReceipt);\r\n    };\r\n\r\n    const interfaceCalcMintInterestValues = async (amount) => {\r\n        const interfaceContext = buildInterfaceContext();\r\n        const mintInterest = await calcMintInterest(interfaceContext, amount);\r\n        const formattedValue = new BigNumber(Web3.utils.fromWei(mintInterest));\r\n        return formattedValue;\r\n    };\r\n\r\n    const interfaceApproveReserve = (address, callback) => {\r\n        const interfaceContext = buildInterfaceContext();\r\n        AllowanceUseReserveToken(interfaceContext, true, callback);\r\n    };\r\n    \r\n    const convertToken = (from, to, amount) => {\r\n        if (!contractStatusData) return '';\r\n\r\n        const {\r\n            bitcoinPrice,\r\n            bproPriceInUsd,\r\n            bproPriceInRbtc,\r\n            reservePrecision,\r\n            bprox2PriceInRbtc,\r\n            bprox2PriceInBpro,\r\n            mocPrice\r\n        } = contractStatusData;\r\n\r\n        const convertDocToUsd = (amount) => amount;\r\n        const convertBproToRbtc = (amount) =>\r\n            amount.times(bproPriceInRbtc).div(reservePrecision);\r\n        const convertBproToUsd = (amount) =>\r\n            amount.times(bproPriceInUsd).div(reservePrecision);\r\n        const convertDocToRbtc = (amount) =>\r\n            amount.div(bitcoinPrice).times(reservePrecision);\r\n        const convertRbtcToUsd = (amount) =>\r\n            amount.times(bitcoinPrice).div(reservePrecision);\r\n        const convertRbtcToBpro = (amount) =>\r\n            amount.div(bproPriceInRbtc).times(reservePrecision);\r\n        const convertRbtcToDoc = (amount) => convertRbtcToUsd(amount);\r\n        const convertRbtcToBprox2 = (amount) =>\r\n            amount.div(bprox2PriceInRbtc).times(reservePrecision);\r\n        const convertBprox2ToRbtc = (amount) =>\r\n            amount.times(bprox2PriceInRbtc).div(reservePrecision);\r\n        const convertBproToBprox2 = (amount) =>\r\n            amount.div(bprox2PriceInBpro).times(reservePrecision);\r\n        const convertBprox2ToBpro = (amount) =>\r\n            amount.times(bprox2PriceInBpro).div(reservePrecision);\r\n        const convertBprox2ToUsd = (amount) =>\r\n            amount // RESERVE\r\n                .times(bprox2PriceInRbtc) // RESERVE * RESERVE\r\n                .div(reservePrecision) // RESERVE\r\n                .times(bitcoinPrice) // RESERVE * USD\r\n                .div(reservePrecision); // USD\r\n\r\n        const convertMoCTokenToRbtc = (amount) =>\r\n            convertDocToRbtc(convertMoCTokenToUsd(amount));\r\n        const convertMoCTokenToUsd = (amount) =>\r\n            amount.times(mocPrice).div(reservePrecision);\r\n        const convertRbtcToMoCToken = (amount) =>\r\n            convertRbtcToDoc(amount).div(mocPrice).times(reservePrecision);\r\n\r\n        const convertMap = {\r\n            STABLE: { USD: convertDocToUsd, RESERVE: convertDocToRbtc },\r\n            RISKPRO: {\r\n                USD: convertBproToUsd,\r\n                RESERVE: convertBproToRbtc,\r\n                RISKPROX: convertBproToBprox2\r\n            },\r\n            RISKPROX: {\r\n                RESERVE: convertBprox2ToRbtc,\r\n                RISKPRO: convertBprox2ToBpro,\r\n                USD: convertBprox2ToUsd\r\n            },\r\n            MOC: {\r\n                RESERVE: convertMoCTokenToRbtc,\r\n                USD: convertMoCTokenToUsd\r\n            },\r\n            RESERVE: {\r\n                USD: convertRbtcToUsd,\r\n                RISKPRO: convertRbtcToBpro,\r\n                STABLE: convertRbtcToDoc,\r\n                RISKPROX: convertRbtcToBprox2,\r\n                MOC: convertRbtcToMoCToken\r\n            }\r\n        };\r\n\r\n        return from === to\r\n            ? new BigNumber(amount)\r\n            : convertMap[from][to](new BigNumber(amount));\r\n    };\r\n\r\n    return (\r\n        <AuthenticateContext.Provider\r\n            value={{\r\n                account,\r\n                accountData,\r\n                userBalanceData,\r\n                contractStatusData,\r\n                isLoggedIn,\r\n                web3,\r\n                connect,\r\n                disconnect,\r\n                interfaceExchangeMethod,\r\n                interfaceMintRiskPro,\r\n                interfaceRedeemRiskPro,\r\n                interfaceMintStable,\r\n                interfaceRedeemStable,\r\n                interfaceMintRiskProx,\r\n                interfaceRedeemRiskProx,\r\n                interfaceApproveMoCTokenCommission,\r\n                getTransactionReceipt,\r\n                interfaceStackedBalance,\r\n                interfaceLockedBalance,\r\n                interfaceStakingDeposit,\r\n                interfaceUnStake,\r\n                interfaceApproveMoCTokenStaking,\r\n                interfaceDelayMachineWithdraw,\r\n                interfaceDelayMachineCancelWithdraw,\r\n                interfacePendingWithdrawals,\r\n                interfaceTransferStableTo,\r\n                interfaceTransferRiskProTo,\r\n                interfaceTransferMocTo,\r\n                interfaceCalcMintInterestValues,\r\n                interfaceApproveReserve,\r\n                socket,\r\n                convertToken,\r\n                getSpendableBalance,\r\n                interfaceDecodeEvents,\r\n                loadContractsStatusAndUserBalance\r\n            }}\r\n        >\r\n            {children}\r\n        </AuthenticateContext.Provider>\r\n    );\r\n};\r\n\r\nexport { AuthenticateContext, AuthenticateProvider };\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}